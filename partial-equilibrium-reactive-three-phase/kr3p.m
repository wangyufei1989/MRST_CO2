


function [state,W,dt] =kr3p(state, G, fluid, rock,dt,varargin)
 %  main Newton-Raphson loop for PARTIAL equilibrium reactive three phase flow
 %  model
%
% SYNOPSIS:
%[state,W,dt] =kr3p(state, G, fluid, rock,dt,varargin)
%
% DESCRIPTION:
%   This function serves to update the independent variables: lquid
%   pressure, gas pressure, porosity; and the dependent variables.

%
% REQUIRED PARAMETERS:
% state       - an objective containing state variables 
%G      - grid system
% fluid   - containing relative permeability and retention curves
% rock        - containing porosity and intrinsic permeability
% dt      - time step


% RETURNS:
%   state   -  an objective containing state variables 
%  W          -an objective containing information of well 
%  dt           - time step that is actually used.
% SEE ALSO:
%  kinetic_reaction

%{

This file is part of mrst_co2 based on MRST.

MRST is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

MRST is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with MRST.  If not, see <http://www.gnu.org/licenses/>.
%}

   opt = struct('bc', [], 'src', [], 'wells', [], ...
                'bcp',[],...
                'LinSolve',     @mldivide,        ...
                'MatrixOutput', false, ...
                'Verbose',      mrstVerbose,...
                'gravity',      gravity(), ...
                'condition_number',false,...
                'pc_form','nonwetting',...
                'use_trans',false);

   opt = merge_options(opt, varargin{:});

   g_vec   = opt.gravity;

   grav = (norm(g_vec(1:G.griddim)) > 0) || isfield(G, 'grav_pressure');

   if all([~opt.MatrixOutput , ...
           isempty(opt.bc)   , ...
           isempty(opt.src)  , ...
           isempty(opt.bcp)  , ...
           isempty(opt.wells), ~grav])
      warning(msgid('DrivingForce:Missing'),                   ...
             ['No external driving forces present in model--', ...
              'state remains unchanged.\n']);
   end

     ncc=G.cells.num;% number of cells.
      [state.perm,dk]=kdk(rock,state);
     hT=computeTrans(G, state);
     fht=1./accumarray(G.cells.faces(:,1), 1./hT);
     nw=length(opt.wells);% number of wells
     state.species0=state.species;
     state.frac0=state.frac;
       state.s0=state.s;
       state.poro0=state.poro;
       rock.poro0=rock.poro;
        state.mu0=state.mu;% save mu in the beginning of a pressure step; this will be used in the saturation calculation.
     state.rho0=state.rho;%save rho in the beginning of a pressure step; this will be used in the saturation calculation.
     state.pressure0=state.pressure;% save pressure in the beginning of a pressure step; this will be used in the saturation calculation.
   state.salinity0=state.salinity;
   state.component0=state.component;
     W=opt.wells;
    for kk=1:nw
     %save well pressure in the beginning of a pressure step; this will be used in the saturation calculation.
    W(kk).pressure0=W(kk).pressure;
    end
   
    %%
    
    dp=100000.1;
    knr=1;
    condL=1;
     realcon=true;
      state=kinetic_reaction(state,G.cells.volumes,dt);
       [d_rho,d_mu]=D_RHOMU_kinetic(state);  
        conlim=1e118;
        dplim=state.dplim;
        errlim=10^(-10);
        KNM=20;
 while (max(abs(dp))>dplim) &&knr<=KNM && condL< conlim &&  realcon
    
     %obtain the left-hand-side (LHS) matrix and the right-hand-side (RHS) vector.
     [L,R,W,CFL,outflux,flux,COMPONENT]=LRHS(state,d_rho,d_mu,fluid,G,rock,fht,dt,opt.bc,W);  
    condL=condest(L);
    state.outflux=outflux;
    state.flux=flux;
     % solve the pressure equation to obtain the pressure increase in one (Newton-Raphson) NR iteration.
     dx=L\R;

    
   nanb=isnan( sum(dx));
   msg='Matrix is singular to working precision.';
        msg1=lastwarn;
     if strcmp(msg,msg1) || nanb
         condL= conlim*2;
         lastwarn('');
     end
state.CFL=CFL;
    state.pressure(:,1)=state.pressure(:,1)+dx(1:ncc);
    state.pressure(:,2)=state.pressure(:,2)+dx(1+ncc:2*ncc);
    state.poro=state.poro+dx(1+2*ncc:3*ncc);
    state.s=fluid.S(state);
    state.component=COMPONENT;
for k=1:nw
    % update the bottom hole pressure of each well. 
    W(k).pressure=W(k).pressure+dx(3*ncc+k);
end
dp=max(abs(dx(1+ncc:(2*ncc))));

   
   realcon=isreal (state.pressure);
  
%update d(rho)/d(p) and d(mu)/d(p) for the new iteration; in each  (Newton-Raphson) NR
%iteration step we update these two factors.
if realcon&&~nanb
    
    state=kinetic_reaction(state,G.cells.volumes,dt);
    if isnan(sum(state.species(:,1)))
        state.solve=0;
        realcon=0;
    else
    
    [d_rho,d_mu]=D_RHOMU_kinetic(state);

    [state.rho,state.mu]=rhomu_p_frac_kinetic(state);
    state.solve=1;
    end

end  

    knr=knr+1;
 end  
 
 

  if knr>KNM || condL> conlim ||(~realcon)|| (max(abs(dp))>dplim)||isnan(dp)||nanb
      
      state.species=state.species0;
     state.frac=state.frac0;
       state.s=state.s0;
       state.poro=state.poro0;
       rock.poro=rock.poro0;
        state.mu=state.mu0;
     state.rho=state.rho0;
     state.pressure=state.pressure0;
   state.salinity=state.salinity0;
   state.component=state.component0;
    state=kinetic_reaction(state,G.cells.volumes,dt);
       [d_rho,d_mu]=D_RHOMU_kinetic(state);

   
     for kk=1:nw
     %save well pressure in the beginning of a pressure step; this will be used in the saturation calculation.
    W(kk).pressure=W(kk).pressure0;
     end
     
   
  
     dt=1e-5;
     dt=state.meandt*1e-5;
     dp=1;
 while (max(abs(dp))>dplim) &&knr<30
   [L,R,W,CFL,outflux,flux,COMPONENT]=LRHS(state,d_rho,d_mu,fluid,G,rock,fht,dt,opt.bc,W);  
    condL=condest(L);
    state.outflux=outflux;
    state.flux=flux;
     % solve the pressure equation to obtain the pressure increase in one (Newton-Raphson) NR iteration.
     dx=L\R;

    
   nanb=isnan( sum(dx));
     %update the pressure of each cell.
      
     msg='Matrix is singular to working precision.';
        msg1=lastwarn;
     if strcmp(msg,msg1) || nanb
         condL=conlim*2;
         lastwarn('');
       %  pause
     end
state.CFL=CFL;
realcon=isreal (state.pressure);
if realcon&&~nanb &&(condL< conlim)&&knr<29
    state.pressure(:,1)=state.pressure(:,1)+dx(1:ncc);
    state.pressure(:,2)=state.pressure(:,2)+dx(1+ncc:2*ncc);
    state.poro=state.poro+dx(1+2*ncc:3*ncc);
    state.s=fluid.S(state);
    state.component=COMPONENT;
for k=1:nw
    % update the bottom hole pressure of each well. 
    W(k).pressure=W(k).pressure+dx(3*ncc+k);
end
dp=max(abs(dx(1+ncc:(2*ncc))));

   
  
%update d(rho)/d(p) and d(mu)/d(p) for the new iteration; in each  (Newton-Raphson) NR
%iteration step we update these two factors.

    
    state=kinetic_reaction(state,G.cells.volumes,dt);
    if isnan(sum(state.species(:,1)))
        state.solve=0;
        realcon=0;
    else
    [d_rho,d_mu]=D_RHOMU_kinetic(state);

    [state.rho,state.mu]=rhomu_p_frac_kinetic(state);
    state.solve=1;
    end
  
    
else
    state.pressure0(:,2)=state.pressure0(:,2)+randn(1,1)*10;  
     state.pressure(:,1)=state.pressure0(:,1);
    state.pressure(:,2)=state.pressure0(:,2);  
      state.s0=fluid.S(state);
      state.s=state.s0;
      state.poro=state.poro0;
    for k=1:nw
    % update the bottom hole pressure of each well. 
    W(k).pressure=W(k).pressure0+abs(randn(1,1)*10);
    end
    
     state=kinetic_reaction(state,G.cells.volumes,dt);
      [d_rho,d_mu]=D_RHOMU_kinetic(state);

    [state.rho,state.mu]=rhomu_p_frac_kinetic(state);
dp=dplim*0.1;
err=errlim*0.1;
dt=rand(1,1)*state.meandt*2;
state.CFL=1e5;
state.solve=0;
    
end  


    
     

    knr=knr+1;
 end
 end
 dcell=state.pressure-state.pressure0;
 dcell=dcell(:);
 dp1=zeros(2*ncc+nw,1);
 dp1(1:2*ncc)=dcell;
 for k=1:nw
     dwell=W(k).pressure-W(k).pressure0;
     dp1(2*ncc+k)=dwell;
        
 end
state.dp(:,1)=dp1;
%state.dp(:,2)=state.dp(:,3);
%state.dp(:,3)=dp1./dt;
state.ds=state.s-state.s0;
end









function [L,R,W,CFL,outflux,flux,COMPONENT]=LRHS(state,drho,dmu,fluid,G,rock,fht,dt,bc,W)

   
[neighborship, ~] = getNeighbourship(G, 'Topological', true);% the  two ajacent cells of a face. Size is number of faces; for instance, if we have two cells, we will have 11 faces.
[cellNo, cf, ~] = getCellNoFaces(G);%cellNo records the location of faces for each cell. cf records the face marks of each cell.
i  = all(neighborship ~= 0, 2);
inter=neighborship(i,:);
ncc=G.cells.num; %number of cells
[kr,dkr]=fluid.relperm(state.s);% relative permeability.
[state.s,dS]=fluid.S(state);%check if we should put this in the main circle
%k=rock.perm;% intrisic permeabilty.
%[k,dk]=kdk(rock,state);
[ib,ic]=upwind(G,state);% get the upwind cell of an internal face.
interb=zeros(size(i));
   interb(i)=ib;
   %icfb=interb(cf);      %distribution of internal faces
interc=zeros(size(i));
   interc(i)=ic;
  % icfc=interc(cf);  
nf=G.faces.num;                        

tib_CFL=fht(i).*kr(ib,1)./state.mu(ib,1).*...
    (state.pressure(inter(:,1),1)-state.pressure(inter(:,2),1)+0.5.*(state.rho(inter(:,1),1)+state.rho(inter(:,2),1)).*((G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:))*gravity'))...
    ./(G.cells.volumes(inter(:,1)).*rock.poro(inter(:,1))+G.cells.volumes(inter(:,2)).*rock.poro(inter(:,2))).*2;

tic_CFL=fht(i).*kr(ic,2)./state.mu(ic,2).*...
    (state.pressure(inter(:,1),2)-state.pressure(inter(:,2),2)+0.5.*(state.rho(inter(:,1),2)+state.rho(inter(:,2),2)).*((G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:))*gravity'))...
 ./(G.cells.volumes(inter(:,1)).*rock.poro(inter(:,1))+G.cells.volumes(inter(:,2)).*rock.poro(inter(:,2))).*2;

ti_CFL=max([abs(tib_CFL);abs(tic_CFL)]);
CFL=1/ti_CFL;
state.flux=zeros(nf,2);
tib_CFL=fht(i).*kr(ib,1)./state.mu(ib,1)./G.faces.areas(i).*...
    (state.pressure(inter(:,1),1)-state.pressure(inter(:,2),1)+0.5.*(state.rho(inter(:,1),1)+state.rho(inter(:,2),1)).*((G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:))*gravity'));

tic_CFL=fht(i).*kr(ic,2)./state.mu(ic,2)./G.faces.areas(i).*...
    (state.pressure(inter(:,1),2)-state.pressure(inter(:,2),2)+0.5.*(state.rho(inter(:,1),2)+state.rho(inter(:,2),2)).*((G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:))*gravity'));
state.flux(i,1)=tib_CFL;
state.flux(i,2)=tic_CFL;
flux=state.flux;

     %% m11
  
      rhokmudkr=zeros(nf,2);
   rhoskmudkr=zeros(nf,2);
    rhokmukr=zeros(nf,2);
    %rhomukr=zeros(nf,2);
   %kkrmurho=k*kr/mu*rho
   rhokmudkr(i,1)=state.rho(ib,1).*fht(i).*dkr(ib,1)./state.mu(ib,1);
   rhokmudkr(i,2)=state.rho(ic,2).*fht(i).*dkr(ic,2)./state.mu(ic,2);
   rhoskmudkr(i,1)=state.rho(ib,1).*0.5.*(state.rho(inter(:,1),1)+state.rho(inter(:,2),1)).*fht(i).*dkr(ib,1)./state.mu(ib,1);
   rhoskmudkr(i,2)=state.rho(ic,2).*0.5.*(state.rho(inter(:,1),2)+state.rho(inter(:,2),2)).*fht(i).*dkr(ic,2)./state.mu(ic,2);
   rhokmukr(i,1)=state.rho(ib,1).*fht(i).*kr(ib,1)./state.mu(ib,1);
   rhokmukr(i,2)=state.rho(ic,2).*fht(i).*kr(ic,2)./state.mu(ic,2);
   %rhomukr(i,1)=1./(k(inter(:,1))+k(inter(:,2))).^2.*state.rho(ib,1).*kr(ib,1)./state.mu(ib,1).*G.faces.areas(i)./sum(G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:),2);
   %rhomukr(i,2)=1./(k(inter(:,1))+k(inter(:,2))).^2.*state.rho(ic,2).*kr(ic,2)./state.mu(ic,2).*G.faces.areas(i)./sum(G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:),2);
   
   
 
   
   rhokkrdmu=zeros(nf,2);
   rhoskkrdmu=zeros(nf,2);
   drhokkrmu=zeros(nf,2);
    drhoskkrmu=zeros(nf,2);
rhokkrdmu(i,1)=state.rho(ib,1).*fht(i).*kr(ib,1)./(state.mu(ib,1)).^2.*(-dmu(ib,1));
rhokkrdmu(i,2)=state.rho(ic,2).*fht(i).*kr(ic,2)./(state.mu(ic,2)).^2.*(-dmu(ic,2));
   rhoskkrdmu(i,1)=state.rho(ib,1).*0.5.*(state.rho(inter(:,1),1)+state.rho(inter(:,2),1)).*fht(i).*kr(ib,1)./(state.mu(ib,1)).^2.*(-dmu(ib,1));
   rhoskkrdmu(i,2)=state.rho(ic,2).*0.5.*(state.rho(inter(:,1),2)+state.rho(inter(:,2),2)).*fht(i).*kr(ic,2)./(state.mu(ic,2)).^2.*(-dmu(ic,2));
   drhokkrmu(i,1)=drho(ib,1).*fht(i).*kr(ib,1)./state.mu(ib,1);
   drhokkrmu(i,2)=drho(ic,2).*fht(i).*kr(ic,2)./state.mu(ic,2);
    drhoskkrmu(i,1)=0.5.*(state.rho(inter(:,1),1)+state.rho(inter(:,2),1)).*drho(ib,1).*fht(i).*kr(ib,1)./state.mu(ib,1);
   drhoskkrmu(i,2)=0.5.*(state.rho(inter(:,1),2)+state.rho(inter(:,2),2)).*drho(ic,2).*fht(i).*kr(ic,2)./state.mu(ic,2);
      rhokkrdmuC=zeros(nf,2);
   rhoskkrdmuC=zeros(nf,2);
   drhokkrmuC=zeros(nf,2);
    drhoskkrmuC=zeros(nf,2);
    rhokkrdmuC(i,1)=state.rho(ib,1).*fht(i).*kr(ib,1)./(state.mu(ib,1)).^2.*(-dmu(ib,3));
rhokkrdmuC(i,2)=state.rho(ic,2).*fht(i).*kr(ic,2)./(state.mu(ic,2)).^2.*(-dmu(ic,4));
   rhoskkrdmuC(i,1)=state.rho(ib,1).*0.5.*(state.rho(inter(:,1),1)+state.rho(inter(:,2),1)).*fht(i).*kr(ib,1)./(state.mu(ib,1)).^2.*(-dmu(ib,3));
   rhoskkrdmuC(i,2)=state.rho(ic,2).*0.5.*(state.rho(inter(:,1),2)+state.rho(inter(:,2),2)).*fht(i).*kr(ic,2)./(state.mu(ic,2)).^2.*(-dmu(ic,4));
   drhokkrmuC(i,1)=drho(ib,3).*fht(i).*kr(ib,1)./state.mu(ib,1);
   drhokkrmuC(i,2)=drho(ic,4).*fht(i).*kr(ic,2)./state.mu(ic,2);
    drhoskkrmuC(i,1)=0.5.*(state.rho(inter(:,1),1)+state.rho(inter(:,2),1)).*drho(ib,3).*fht(i).*kr(ib,1)./state.mu(ib,1);
   drhoskkrmuC(i,2)=0.5.*(state.rho(inter(:,1),2)+state.rho(inter(:,2),2)).*drho(ic,4).*fht(i).*kr(ic,2)./state.mu(ic,2);
 
   
   
   
   rhoskmukr=zeros(nf,2);
   rhoskmukr(i,1)=0.5.*(state.rho(inter(:,1),1)+state.rho(inter(:,2),1)).*state.rho(ib,1).*fht(i).*kr(ib,1)./state.mu(ib,1);
   rhoskmukr(i,2)=0.5.*(state.rho(inter(:,1),2)+state.rho(inter(:,2),2)).*state.rho(ic,2).*fht(i).*kr(ic,2)./state.mu(ic,2);

   
    %rhosmukr=zeros(nf,2);
  % rhosmukr(i,1)=1./(k(inter(:,1))+k(inter(:,2))).^2.*0.5.*(state.rho(inter(:,1),1)+state.rho(inter(:,2),1)).*state.rho(ib,1).*kr(ib,1)./state.mu(ib,1).*G.faces.areas(i)./sum(G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:),2);
   %rhosmukr(i,2)=1./(k(inter(:,1))+k(inter(:,2))).^2.*0.5.*(state.rho(inter(:,1),2)+state.rho(inter(:,2),2)).*state.rho(ic,2).*kr(ic,2)./state.mu(ic,2).*G.faces.areas(i)./sum(G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:),2);

  [kb,kc]=DISP(state,G,rock);

   
  
     kb=1./accumarray(G.cells.faces(:,1), 1./kb);
 kc=1./accumarray(G.cells.faces(:,1), 1./kc);
   
   
   dsphirhod=zeros(nf,2);
 
    dsphirhod(i,1)=1./(state.s(inter(:,1),1)+state.s(inter(:,2),1)).^2.*0.5.*(state.rho(inter(:,1),1)+state.rho(inter(:,2),1)).*0.5.*(state.poro(inter(:,1))+state.poro(inter(:,2))).*kb(i);
   dsphirhod(i,2)=1./(state.s(inter(:,1),2)+state.s(inter(:,2),2)).^2.*0.5.*(state.rho(inter(:,1),2)+state.rho(inter(:,2),2)).*0.5.*(state.poro(inter(:,1))+state.poro(inter(:,2))).*kc(i);
 dsphirhod(isnan(dsphirhod))=0;
  dsphirhod(dsphirhod==inf)=0;
    sphirhod=zeros(nf,2);
 
    sphirhod(i,1)=2./(1./state.s(inter(:,1),1)+1./state.s(inter(:,2),1)).*0.5.*(state.rho(inter(:,1),1)+state.rho(inter(:,2),1)).*0.5.*(state.poro(inter(:,1))+state.poro(inter(:,2))).*kb(i);
   sphirhod(i,2)=2./(1./state.s(inter(:,1),2)+1./state.s(inter(:,2),2)).*0.5.*(state.rho(inter(:,1),2)+state.rho(inter(:,2),2)).*0.5.*(state.poro(inter(:,1))+state.poro(inter(:,2))).*kc(i);
   sphirhod(isnan(sphirhod))=0;
     sphirhod(sphirhod==inf)=0;%

   srhod(i,1)=2./(1./state.s(inter(:,1),1)+1./state.s(inter(:,2),1)).*0.5.*(state.rho(inter(:,1),1)+state.rho(inter(:,2),1)).*kb(i);
   srhod(i,2)=2./(1./state.s(inter(:,1),2)+1./state.s(inter(:,2),2)).*0.5.*(state.rho(inter(:,1),2)+state.rho(inter(:,2),2)).*kc(i);
   srhod(isnan(sphirhod))=0;
     srhod(sphirhod==inf)=0;%
   sphid=zeros(nf,2);
 
    sphid(i,1)=2./(1./state.s(inter(:,1),1)+1./state.s(inter(:,2),1)).*0.5.*(state.poro(inter(:,1))+state.poro(inter(:,2))).*kb(i);
    sphid(i,2)=2./(1./state.s(inter(:,1),2)+1./state.s(inter(:,2),2)).*0.5.*(state.poro(inter(:,1))+state.poro(inter(:,2))).*kc(i);
  sphid(isnan(sphid))=0;
  sphid(sphid==inf)=0;%
  %%
d1e=G.cells.volumes.*state.poro./dt.*(state.s(:,1).*drho(:,1).*state.frac(:,1)+state.rho(:,1).*(-dS).*state.frac(:,1)); 
m11=sparse(1:(ncc),1:(ncc),d1e,(ncc),(ncc));

m11=m11...
    +sparse(inter(:,1),ib,state.frac(ib,1).* rhokkrdmu(i,1).*(state.pressure(inter(:,1),1)-state.pressure(inter(:,2),1)),(ncc),(ncc))...
    +sparse(inter(:,2),ib,state.frac(ib,1).* rhokkrdmu(i,1).*(state.pressure(inter(:,2),1)-state.pressure(inter(:,1),1)),(ncc),(ncc))...
    +sparse(inter(:,1),ib,state.frac(ib,1).* rhoskkrdmu(i,1).*((G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:))*gravity'),(ncc),(ncc))...
    +sparse(inter(:,2),ib,state.frac(ib,1).* rhoskkrdmu(i,1).*((G.cells.centroids(inter(:,1),:)-G.cells.centroids(inter(:,2),:))*gravity'),(ncc),(ncc))...
    ...
    +sparse(inter(:,1),ib,state.frac(ib,1).* drhokkrmu(i,1).*(state.pressure(inter(:,1),1)-state.pressure(inter(:,2),1)),(ncc),(ncc))...
    +sparse(inter(:,2),ib,state.frac(ib,1).* drhokkrmu(i,1).*(state.pressure(inter(:,2),1)-state.pressure(inter(:,1),1)),(ncc),(ncc))...
    +sparse(inter(:,1),ib,state.frac(ib,1).* drhoskkrmu(i,1).*((G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:))*gravity'),(ncc),(ncc))...
    +sparse(inter(:,2),ib,state.frac(ib,1).* drhoskkrmu(i,1).*((G.cells.centroids(inter(:,1),:)-G.cells.centroids(inter(:,2),:))*gravity'),(ncc),(ncc))...
...   
+sparse(inter(:,1),inter(:,2),state.frac(ib,1).* rhokmukr(i,1).*(-1),(ncc),(ncc))...
    +sparse(inter(:,1),inter(:,1),state.frac(ib,1).* rhokmukr(i,1).*(1),(ncc),(ncc))...    
   +sparse(inter(:,2),inter(:,1),state.frac(ib,1).* rhokmukr(i,1).*(-1),(ncc),(ncc))...
  +sparse(inter(:,2),inter(:,2),state.frac(ib,1).* rhokmukr(i,1).*(1),(ncc),(ncc))...  
...
      +sparse(inter(:,1),inter(:,2),state.frac(ib,1).* rhokmukr(i,1).*0.5.*drho(inter(:,2),1).*((G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:))*gravity'),(ncc),(ncc))...
    +sparse(inter(:,1),inter(:,1),state.frac(ib,1).* rhokmukr(i,1).*0.5.*drho(inter(:,1),1).*((G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:))*gravity'),(ncc),(ncc))...    
   +sparse(inter(:,2),inter(:,1),state.frac(ib,1).* rhokmukr(i,1).*0.5.*drho(inter(:,1),1).*(-1).*((G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:))*gravity'),(ncc),(ncc))...
  +sparse(inter(:,2),inter(:,2),state.frac(ib,1).* rhokmukr(i,1).*0.5.*drho(inter(:,2),1).*(-1).*((G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:))*gravity'),(ncc),(ncc))...  
    ...
+sparse(inter(:,1),ib,state.frac(ib,1).* rhokmudkr(i,1).*(-dS(ib)).*(state.pressure(inter(:,1),1)-state.pressure(inter(:,2),1)),(ncc),(ncc))...
    +sparse(inter(:,2),ib,state.frac(ib,1).* rhokmudkr(i,1).*(-dS(ib)).*(state.pressure(inter(:,2),1)-state.pressure(inter(:,1),1)),(ncc),(ncc))...
    +sparse(inter(:,1),ib,state.frac(ib,1).* rhoskmudkr(i,1).*(-dS(ib)).*((G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:))*gravity'),(ncc),(ncc))...
    +sparse(inter(:,2),ib,state.frac(ib,1).* rhoskmudkr(i,1).*(-dS(ib)).*((G.cells.centroids(inter(:,1),:)-G.cells.centroids(inter(:,2),:))*gravity'),(ncc),(ncc))...
    ...
 +sparse(inter(:,1),inter(:,2), sphid(i,1).*0.5.*drho(inter(:,2),1).*(-state.frac(inter(:,2),1)+state.frac(inter(:,1),1)),(ncc),(ncc))...
    +sparse(inter(:,1),inter(:,1), sphid(i,1).*0.5.*drho(inter(:,1),1).*(-state.frac(inter(:,2),1)+state.frac(inter(:,1),1)),(ncc),(ncc))...
    +sparse(inter(:,2),inter(:,2), sphid(i,1).*0.5.*drho(inter(:,2),1).*(state.frac(inter(:,2),1)-state.frac(inter(:,1),1)),(ncc),(ncc))...
    +sparse(inter(:,2),inter(:,1),sphid(i,1).*0.5.*drho(inter(:,1),1).*(state.frac(inter(:,2),1)-state.frac(inter(:,1),1)),(ncc),(ncc))...
    ...
    +sparse(inter(:,1),inter(:,2), 2.*state.s(inter(:,1),1).^2.*dsphirhod(i,1).*(-dS(inter(:,2))).*(-state.frac(inter(:,2),1)+state.frac(inter(:,1),1)),(ncc),(ncc))...
    +sparse(inter(:,1),inter(:,1), 2.*state.s(inter(:,2),1).^2.*dsphirhod(i,1).*(-dS(inter(:,1))).*(-state.frac(inter(:,2),1)+state.frac(inter(:,1),1)),(ncc),(ncc))...
     +sparse(inter(:,2),inter(:,2), 2.*state.s(inter(:,1),1).^2.*dsphirhod(i,1).*(-dS(inter(:,2))).*(-state.frac(inter(:,1),1)+state.frac(inter(:,2),1)),(ncc),(ncc))...
    +sparse(inter(:,2),inter(:,1), 2.*state.s(inter(:,2),1).^2.*dsphirhod(i,1).*(-dS(inter(:,1))).*(-state.frac(inter(:,1),1)+state.frac(inter(:,2),1)),(ncc),(ncc));




%% m12
%[drho,dmu]=D_RHOMU(state);
   

   d1e=G.cells.volumes.*state.poro./dt.*(drho(:,3).*state.s(:,1).*state.frac(:,1)+state.rho(:,1).*dS.*state.frac(:,1)+state.s(:,1).*state.rho(:,1).*state.dfrac(:,1)); 
m12=sparse(1:(ncc),1:(ncc),d1e,(ncc),(ncc));
m12=m12...   
      +sparse(inter(:,1),ib,state.frac(ib,1).* rhokkrdmuC(i,1).*(state.pressure(inter(:,1),1)-state.pressure(inter(:,2),1)),(ncc),(ncc))...%NEW
    +sparse(inter(:,2),ib,state.frac(ib,1).* rhokkrdmuC(i,1).*(state.pressure(inter(:,2),1)-state.pressure(inter(:,1),1)),(ncc),(ncc))...
    +sparse(inter(:,1),ib,state.frac(ib,1).* rhoskkrdmuC(i,1).*((G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:))*gravity'),(ncc),(ncc))...
    +sparse(inter(:,2),ib,state.frac(ib,1).* rhoskkrdmuC(i,1).*((G.cells.centroids(inter(:,1),:)-G.cells.centroids(inter(:,2),:))*gravity'),(ncc),(ncc))...
    ...
    +sparse(inter(:,1),ib,state.frac(ib,1).* drhokkrmuC(i,1).*(state.pressure(inter(:,1),1)-state.pressure(inter(:,2),1)),(ncc),(ncc))...%NEW
    +sparse(inter(:,2),ib,state.frac(ib,1).* drhokkrmuC(i,1).*(state.pressure(inter(:,2),1)-state.pressure(inter(:,1),1)),(ncc),(ncc))...
    +sparse(inter(:,1),ib,state.frac(ib,1).* drhoskkrmuC(i,1).*((G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:))*gravity'),(ncc),(ncc))...
    +sparse(inter(:,2),ib,state.frac(ib,1).* drhoskkrmuC(i,1).*((G.cells.centroids(inter(:,1),:)-G.cells.centroids(inter(:,2),:))*gravity'),(ncc),(ncc))...
    ...
  +sparse(inter(:,1),inter(:,2),state.frac(ib,1).* rhokmukr(i,1).*0.5.*drho(inter(:,2),3).*((G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:))*gravity'),(ncc),(ncc))...%NEW
    +sparse(inter(:,1),inter(:,1),state.frac(ib,1).* rhokmukr(i,1).*0.5.*drho(inter(:,1),3).*((G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:))*gravity'),(ncc),(ncc))...    
   +sparse(inter(:,2),inter(:,1),state.frac(ib,1).* rhokmukr(i,1).*0.5.*drho(inter(:,1),3).*(-1).*((G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:))*gravity'),(ncc),(ncc))...
  +sparse(inter(:,2),inter(:,2),state.frac(ib,1).* rhokmukr(i,1).*0.5.*drho(inter(:,2),3).*(-1).*((G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:))*gravity'),(ncc),(ncc))...  
    ...    
    +sparse(inter(:,1),ib,state.dfrac(ib,1).* rhokmukr(i,1).*(state.pressure(inter(:,1),1)-state.pressure(inter(:,2),1)),(ncc),(ncc))...
    +sparse(inter(:,2),ib,state.dfrac(ib,1).* rhokmukr(i,1).*(state.pressure(inter(:,2),1)-state.pressure(inter(:,1),1)),(ncc),(ncc))...
    +sparse(inter(:,1),ib,state.dfrac(ib,1).* rhoskmukr(i,1).*((G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:))*gravity'),(ncc),(ncc))...
    +sparse(inter(:,2),ib,state.dfrac(ib,1).* rhoskmukr(i,1).*((G.cells.centroids(inter(:,1),:)-G.cells.centroids(inter(:,2),:))*gravity'),(ncc),(ncc))...
...  
+sparse(inter(:,1),ib,state.frac(ib,1).* rhokmudkr(i,1).*(dS(ib)).*(state.pressure(inter(:,1),1)-state.pressure(inter(:,2),1)),(ncc),(ncc))...
    +sparse(inter(:,2),ib,state.frac(ib,1).* rhokmudkr(i,1).*(dS(ib)).*(state.pressure(inter(:,2),1)-state.pressure(inter(:,1),1)),(ncc),(ncc))...
    +sparse(inter(:,1),ib,state.frac(ib,1).* rhoskmudkr(i,1).*(dS(ib)).*((G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:))*gravity'),(ncc),(ncc))...
    +sparse(inter(:,2),ib,state.frac(ib,1).* rhoskmudkr(i,1).*(dS(ib)).*((G.cells.centroids(inter(:,1),:)-G.cells.centroids(inter(:,2),:))*gravity'),(ncc),(ncc))...
 ...
        +sparse(inter(:,1),inter(:,2), sphid(i,1).*0.5.*drho(inter(:,2),3).*(-state.frac(inter(:,2),1)+state.frac(inter(:,1),1)),(ncc),(ncc))...%NEW
    +sparse(inter(:,1),inter(:,1), sphid(i,1).*0.5.*drho(inter(:,1),3).*(-state.frac(inter(:,2),1)+state.frac(inter(:,1),1)),(ncc),(ncc))...
    +sparse(inter(:,2),inter(:,2), sphid(i,1).*0.5.*drho(inter(:,2),3).*(state.frac(inter(:,2),1)-state.frac(inter(:,1),1)),(ncc),(ncc))...
    +sparse(inter(:,2),inter(:,1),sphid(i,1).*0.5.*drho(inter(:,1),3).*(state.frac(inter(:,2),1)-state.frac(inter(:,1),1)),(ncc),(ncc))...
    ...    
+sparse(inter(:,1),inter(:,2), 2.*state.s(inter(:,1),1).^2.*dsphirhod(i,1).*(-dS(inter(:,2))).*(state.frac(inter(:,2),1)-state.frac(inter(:,1),1)),(ncc),(ncc))...
    +sparse(inter(:,1),inter(:,1), 2.*state.s(inter(:,2),1).^2.*dsphirhod(i,1).*(-dS(inter(:,1))).*(state.frac(inter(:,2),1)-state.frac(inter(:,1),1)),(ncc),(ncc))...
     +sparse(inter(:,2),inter(:,2), 2.*state.s(inter(:,1),1).^2.*dsphirhod(i,1).*(-dS(inter(:,2))).*(state.frac(inter(:,1),1)-state.frac(inter(:,2),1)),(ncc),(ncc))...
    +sparse(inter(:,2),inter(:,1), 2.*state.s(inter(:,2),1).^2.*dsphirhod(i,1).*(-dS(inter(:,1))).*(state.frac(inter(:,1),1)-state.frac(inter(:,2),1)),(ncc),(ncc))...
...
+sparse(inter(:,1),inter(:,2), -sphirhod(i,1).*(state.dfrac(inter(:,2),1)),(ncc),(ncc))...
    +sparse(inter(:,1),inter(:,1), sphirhod(i,1).*(state.dfrac(inter(:,1),1)),(ncc),(ncc))...
    +sparse(inter(:,2),inter(:,2), sphirhod(i,1).*(state.dfrac(inter(:,2),1)),(ncc),(ncc))...
    +sparse(inter(:,2),inter(:,1),-sphirhod(i,1).*(state.dfrac(inter(:,1),1)),(ncc),(ncc));


%% m13

 

d1e=G.cells.volumes./dt.*(state.s(:,1).*state.rho(:,1).*state.frac(:,1)); 
m13=sparse(1:(ncc),1:(ncc),d1e,(ncc),(ncc));

m13=m13...
 +sparse(inter(:,1),inter(:,2), srhod(i,1).*0.5.*(-state.frac(inter(:,2),1)+state.frac(inter(:,1),1)),(ncc),(ncc))...
    +sparse(inter(:,1),inter(:,1), srhod(i,1).*0.5.*(-state.frac(inter(:,2),1)+state.frac(inter(:,1),1)),(ncc),(ncc))...
    +sparse(inter(:,2),inter(:,2), srhod(i,1).*0.5.*(state.frac(inter(:,2),1)-state.frac(inter(:,1),1)),(ncc),(ncc))...
    +sparse(inter(:,2),inter(:,1),srhod(i,1).*0.5.*(state.frac(inter(:,2),1)-state.frac(inter(:,1),1)),(ncc),(ncc)); 
%     +sparse(inter(:,1),inter(:,2),state.frac(ib,1).*dk(inter(:,2)).*2.*(k(inter(:,1)).^2).* rhomukr(i,1).*(state.pressure(inter(:,1),1)-state.pressure(inter(:,2),1)),(ncc),(ncc))...
%     +sparse(inter(:,1),inter(:,1),state.frac(ib,1).*dk(inter(:,1)).*2.*(k(inter(:,2)).^2).* rhomukr(i,1).*(state.pressure(inter(:,1),1)-state.pressure(inter(:,2),1)),(ncc),(ncc))...
%     +sparse(inter(:,2),inter(:,2),state.frac(ib,1).*dk(inter(:,2)).*2.*(k(inter(:,1)).^2).*  rhomukr(i,1).*(state.pressure(inter(:,2),1)-state.pressure(inter(:,1),1)),(ncc),(ncc))...
%     +sparse(inter(:,2),inter(:,1),state.frac(ib,1).*dk(inter(:,1)).*2.*(k(inter(:,2)).^2).*  rhomukr(i,1).*(state.pressure(inter(:,2),1)-state.pressure(inter(:,1),1)),(ncc),(ncc))...
%     +sparse(inter(:,1),inter(:,2),state.frac(ib,1).*dk(inter(:,2)).*2.*(k(inter(:,1)).^2).* rhosmukr(i,1).*((G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:))*gravity'),(ncc),(ncc))...
%     +sparse(inter(:,1),inter(:,1),state.frac(ib,1).*dk(inter(:,1)).*2.*(k(inter(:,2)).^2).* rhosmukr(i,1).*((G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:))*gravity'),(ncc),(ncc))...
%     +sparse(inter(:,2),inter(:,2),state.frac(ib,1).*dk(inter(:,2)).*2.*(k(inter(:,1)).^2).* rhosmukr(i,1).*((G.cells.centroids(inter(:,1),:)-G.cells.centroids(inter(:,2),:))*gravity'),(ncc),(ncc))...
%     +sparse(inter(:,2),inter(:,1),state.frac(ib,1).*dk(inter(:,1)).*2.*(k(inter(:,2)).^2).* rhosmukr(i,1).*((G.cells.centroids(inter(:,1),:)-G.cells.centroids(inter(:,2),:))*gravity'),(ncc),(ncc))...

  

%% m21

d1e=G.cells.volumes.*state.poro./dt.*(state.s(:,1).*drho(:,1).*state.frac(:,2)+state.rho(:,1).*(-dS).*state.frac(:,2)-state.rho(:,2).*(-dS)); 
m21=sparse(1:(ncc),1:(ncc),d1e,(ncc),(ncc));
m21=m21...
+sparse(inter(:,1),ib,state.frac(ib,2).* rhokkrdmu(i,1).*(state.pressure(inter(:,1),1)-state.pressure(inter(:,2),1)),(ncc),(ncc))...
    +sparse(inter(:,2),ib,state.frac(ib,2).* rhokkrdmu(i,1).*(state.pressure(inter(:,2),1)-state.pressure(inter(:,1),1)),(ncc),(ncc))...
    +sparse(inter(:,1),ib,state.frac(ib,2).* rhoskkrdmu(i,1).*((G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:))*gravity'),(ncc),(ncc))...
    +sparse(inter(:,2),ib,state.frac(ib,2).* rhoskkrdmu(i,1).*((G.cells.centroids(inter(:,1),:)-G.cells.centroids(inter(:,2),:))*gravity'),(ncc),(ncc))...
    ...
    +sparse(inter(:,1),ib,state.frac(ib,2).* drhokkrmu(i,1).*(state.pressure(inter(:,1),1)-state.pressure(inter(:,2),1)),(ncc),(ncc))...
    +sparse(inter(:,2),ib,state.frac(ib,2).* drhokkrmu(i,1).*(state.pressure(inter(:,2),1)-state.pressure(inter(:,1),1)),(ncc),(ncc))...
    +sparse(inter(:,1),ib,state.frac(ib,2).* drhoskkrmu(i,1).*((G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:))*gravity'),(ncc),(ncc))...
    +sparse(inter(:,2),ib,state.frac(ib,2).* drhoskkrmu(i,1).*((G.cells.centroids(inter(:,1),:)-G.cells.centroids(inter(:,2),:))*gravity'),(ncc),(ncc))...
...   
+sparse(inter(:,1),inter(:,2),state.frac(ib,2).* rhokmukr(i,1).*(-1),(ncc),(ncc))...
    +sparse(inter(:,1),inter(:,1),state.frac(ib,2).* rhokmukr(i,1).*(1),(ncc),(ncc))...    
   +sparse(inter(:,2),inter(:,1),state.frac(ib,2).* rhokmukr(i,1).*(-1),(ncc),(ncc))...
  +sparse(inter(:,2),inter(:,2),state.frac(ib,2).* rhokmukr(i,1).*(1),(ncc),(ncc))...  
...
      +sparse(inter(:,1),inter(:,2),state.frac(ib,2).* rhokmukr(i,1).*0.5.*drho(inter(:,2),1).*((G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:))*gravity'),(ncc),(ncc))...
    +sparse(inter(:,1),inter(:,1),state.frac(ib,2).* rhokmukr(i,1).*0.5.*drho(inter(:,1),1).*((G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:))*gravity'),(ncc),(ncc))...    
   +sparse(inter(:,2),inter(:,1),state.frac(ib,2).* rhokmukr(i,1).*0.5.*drho(inter(:,1),1).*(-1).*((G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:))*gravity'),(ncc),(ncc))...
  +sparse(inter(:,2),inter(:,2),state.frac(ib,2).* rhokmukr(i,1).*0.5.*drho(inter(:,2),1).*(-1).*((G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:))*gravity'),(ncc),(ncc))...  
    ... 
+sparse(inter(:,1),ib,state.frac(ib,2).* rhokmudkr(i,1).*(-dS(ib)).*(state.pressure(inter(:,1),1)-state.pressure(inter(:,2),1)),(ncc),(ncc))...
    +sparse(inter(:,2),ib,state.frac(ib,2).* rhokmudkr(i,1).*(-dS(ib)).*(state.pressure(inter(:,2),1)-state.pressure(inter(:,1),1)),(ncc),(ncc))...
    +sparse(inter(:,1),ib,state.frac(ib,2).* rhoskmudkr(i,1).*(-dS(ib)).*((G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:))*gravity'),(ncc),(ncc))...
    +sparse(inter(:,2),ib,state.frac(ib,2).* rhoskmudkr(i,1).*(-dS(ib)).*((G.cells.centroids(inter(:,1),:)-G.cells.centroids(inter(:,2),:))*gravity'),(ncc),(ncc))...
    ...
+sparse(inter(:,1),ic, rhokmudkr(i,2).*(-dS(ic)).*(state.pressure(inter(:,1),2)-state.pressure(inter(:,2),2)),(ncc),(ncc))...
    +sparse(inter(:,2),ic,rhokmudkr(i,2).*(-dS(ic)).*(state.pressure(inter(:,2),2)-state.pressure(inter(:,1),2)),(ncc),(ncc))...
    +sparse(inter(:,1),ic, rhoskmudkr(i,2).*(-dS(ic)).*((G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:))*gravity'),(ncc),(ncc))...
    +sparse(inter(:,2),ic, rhoskmudkr(i,2).*(-dS(ic)).*((G.cells.centroids(inter(:,1),:)-G.cells.centroids(inter(:,2),:))*gravity'),(ncc),(ncc))...
 ...
 +sparse(inter(:,1),inter(:,2), sphid(i,1).*0.5.*drho(inter(:,2),1).*(-state.frac(inter(:,2),2)+state.frac(inter(:,1),2)),(ncc),(ncc))...
    +sparse(inter(:,1),inter(:,1), sphid(i,1).*0.5.*drho(inter(:,1),1).*(-state.frac(inter(:,2),2)+state.frac(inter(:,1),2)),(ncc),(ncc))...
    +sparse(inter(:,2),inter(:,2), sphid(i,1).*0.5.*drho(inter(:,2),1).*(state.frac(inter(:,2),2)-state.frac(inter(:,1),2)),(ncc),(ncc))...
    +sparse(inter(:,2),inter(:,1),sphid(i,1).*0.5.*drho(inter(:,1),1).*(state.frac(inter(:,2),2)-state.frac(inter(:,1),2)),(ncc),(ncc))...
    ...
    +sparse(inter(:,1),inter(:,2), 2.*state.s(inter(:,1),1).^2.*dsphirhod(i,1).*(-dS(inter(:,2))).*(-state.frac(inter(:,2),2)+state.frac(inter(:,1),2)),(ncc),(ncc))...
    +sparse(inter(:,1),inter(:,1), 2.*state.s(inter(:,2),1).^2.*dsphirhod(i,1).*(-dS(inter(:,1))).*(-state.frac(inter(:,2),2)+state.frac(inter(:,1),2)),(ncc),(ncc))...
     +sparse(inter(:,2),inter(:,2), 2.*state.s(inter(:,1),1).^2.*dsphirhod(i,1).*(-dS(inter(:,2))).*(-state.frac(inter(:,1),2)+state.frac(inter(:,2),2)),(ncc),(ncc))...
    +sparse(inter(:,2),inter(:,1), 2.*state.s(inter(:,2),1).^2.*dsphirhod(i,1).*(-dS(inter(:,1))).*(-state.frac(inter(:,1),2)+state.frac(inter(:,2),2)),(ncc),(ncc));

    








   
 

%% m22

d1e=G.cells.volumes.*state.poro./dt.*(drho(:,3).*state.s(:,1).*state.frac(:,2)+state.rho(:,1).*dS.*state.frac(:,2)+state.s(:,1).*state.rho(:,1).*state.dfrac(:,2)...
       -state.rho(:,2).*dS+state.s(:,2).*drho(:,2));  
m22=sparse(1:(ncc),1:(ncc),d1e,(ncc),(ncc));

psp=state.pressure(:,2)<state.pressure(:,1);

%  d1e=state.dspecies(psp);  
%  m22=m22+sparse(G.cells.indexMap(psp),G.cells.indexMap(psp),d1e,(ncc),(ncc));

m22=m22...
+sparse(inter(:,1),ic,rhokkrdmu(i,2).*(state.pressure(inter(:,1),2)-state.pressure(inter(:,2),2)),(ncc),(ncc))...
    +sparse(inter(:,2),ic, rhokkrdmu(i,2).*(state.pressure(inter(:,2),2)-state.pressure(inter(:,1),2)),(ncc),(ncc))...
    +sparse(inter(:,1),ic, rhoskkrdmu(i,2).*((G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:))*gravity'),(ncc),(ncc))...
    +sparse(inter(:,2),ic, rhoskkrdmu(i,2).*((G.cells.centroids(inter(:,1),:)-G.cells.centroids(inter(:,2),:))*gravity'),(ncc),(ncc))...
    ...
    +sparse(inter(:,1),ic, drhokkrmu(i,2).*(state.pressure(inter(:,1),2)-state.pressure(inter(:,2),2)),(ncc),(ncc))...
    +sparse(inter(:,2),ic, drhokkrmu(i,2).*(state.pressure(inter(:,2),2)-state.pressure(inter(:,1),2)),(ncc),(ncc))...
    +sparse(inter(:,1),ic,drhoskkrmu(i,2).*((G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:))*gravity'),(ncc),(ncc))...
    +sparse(inter(:,2),ic, drhoskkrmu(i,2).*((G.cells.centroids(inter(:,1),:)-G.cells.centroids(inter(:,2),:))*gravity'),(ncc),(ncc))...
...   
+sparse(inter(:,1),inter(:,2),rhokmukr(i,2).*(-1),(ncc),(ncc))...
    +sparse(inter(:,1),inter(:,1), rhokmukr(i,2).*(1),(ncc),(ncc))...    
   +sparse(inter(:,2),inter(:,1), rhokmukr(i,2).*(-1),(ncc),(ncc))...
  +sparse(inter(:,2),inter(:,2), rhokmukr(i,2).*(1),(ncc),(ncc))...  
...
      +sparse(inter(:,1),inter(:,2), rhokmukr(i,2).*0.5.*drho(inter(:,2),2).*((G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:))*gravity'),(ncc),(ncc))...
    +sparse(inter(:,1),inter(:,1), rhokmukr(i,2).*0.5.*drho(inter(:,1),2).*((G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:))*gravity'),(ncc),(ncc))...    
   +sparse(inter(:,2),inter(:,1), rhokmukr(i,2).*0.5.*drho(inter(:,1),2).*(-1).*((G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:))*gravity'),(ncc),(ncc))...
  +sparse(inter(:,2),inter(:,2), rhokmukr(i,2).*0.5.*drho(inter(:,2),2).*(-1).*((G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:))*gravity'),(ncc),(ncc))...  
    ...
    +sparse(inter(:,1),ic, rhokmudkr(i,2).*(dS(ic)).*(state.pressure(inter(:,1),2)-state.pressure(inter(:,2),2)),(ncc),(ncc))...
    +sparse(inter(:,2),ic, rhokmudkr(i,2).*(dS(ic)).*(state.pressure(inter(:,2),2)-state.pressure(inter(:,1),2)),(ncc),(ncc))...
    +sparse(inter(:,1),ic, rhoskmudkr(i,2).*(dS(ic)).*((G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:))*gravity'),(ncc),(ncc))...
    +sparse(inter(:,2),ic, rhoskmudkr(i,2).*(dS(ic)).*((G.cells.centroids(inter(:,1),:)-G.cells.centroids(inter(:,2),:))*gravity'),(ncc),(ncc))...
    ...
+sparse(inter(:,1),ib,state.frac(ib,2).* rhokkrdmuC(i,1).*(state.pressure(inter(:,1),1)-state.pressure(inter(:,2),1)),(ncc),(ncc))...%NEW
    +sparse(inter(:,2),ib,state.frac(ib,2).* rhokkrdmuC(i,1).*(state.pressure(inter(:,2),1)-state.pressure(inter(:,1),1)),(ncc),(ncc))...
    +sparse(inter(:,1),ib,state.frac(ib,2).* rhoskkrdmuC(i,1).*((G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:))*gravity'),(ncc),(ncc))...
    +sparse(inter(:,2),ib,state.frac(ib,2).* rhoskkrdmuC(i,1).*((G.cells.centroids(inter(:,1),:)-G.cells.centroids(inter(:,2),:))*gravity'),(ncc),(ncc))...
    ...
    +sparse(inter(:,1),ib,state.frac(ib,2).* drhokkrmuC(i,1).*(state.pressure(inter(:,1),1)-state.pressure(inter(:,2),1)),(ncc),(ncc))...%NEW
    +sparse(inter(:,2),ib,state.frac(ib,2).* drhokkrmuC(i,1).*(state.pressure(inter(:,2),1)-state.pressure(inter(:,1),1)),(ncc),(ncc))...
    +sparse(inter(:,1),ib,state.frac(ib,2).* drhoskkrmuC(i,1).*((G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:))*gravity'),(ncc),(ncc))...
    +sparse(inter(:,2),ib,state.frac(ib,2).* drhoskkrmuC(i,1).*((G.cells.centroids(inter(:,1),:)-G.cells.centroids(inter(:,2),:))*gravity'),(ncc),(ncc))...    
    ...
        +sparse(inter(:,1),inter(:,2),state.frac(ib,2).* rhokmukr(i,1).*0.5.*drho(inter(:,2),3).*((G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:))*gravity'),(ncc),(ncc))...%NEW
    +sparse(inter(:,1),inter(:,1),state.frac(ib,2).* rhokmukr(i,1).*0.5.*drho(inter(:,1),3).*((G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:))*gravity'),(ncc),(ncc))...    
   +sparse(inter(:,2),inter(:,1),state.frac(ib,2).* rhokmukr(i,1).*0.5.*drho(inter(:,1),3).*(-1).*((G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:))*gravity'),(ncc),(ncc))...
  +sparse(inter(:,2),inter(:,2),state.frac(ib,2).* rhokmukr(i,1).*0.5.*drho(inter(:,2),3).*(-1).*((G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:))*gravity'),(ncc),(ncc))...  
    ...
    +sparse(inter(:,1),ib,state.dfrac(ib,2).* rhokmukr(i,1).*(state.pressure(inter(:,1),1)-state.pressure(inter(:,2),1)),(ncc),(ncc))...
    +sparse(inter(:,2),ib,state.dfrac(ib,2).* rhokmukr(i,1).*(state.pressure(inter(:,2),1)-state.pressure(inter(:,1),1)),(ncc),(ncc))...
    +sparse(inter(:,1),ib,state.dfrac(ib,2).* rhoskmukr(i,1).*((G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:))*gravity'),(ncc),(ncc))...
    +sparse(inter(:,2),ib,state.dfrac(ib,2).* rhoskmukr(i,1).*((G.cells.centroids(inter(:,1),:)-G.cells.centroids(inter(:,2),:))*gravity'),(ncc),(ncc))...
...  
    +sparse(inter(:,1),ib,state.frac(ib,2).* rhokmudkr(i,1).*(dS(ib)).*(state.pressure(inter(:,1),1)-state.pressure(inter(:,2),1)),(ncc),(ncc))...
    +sparse(inter(:,2),ib,state.frac(ib,2).* rhokmudkr(i,1).*(dS(ib)).*(state.pressure(inter(:,2),1)-state.pressure(inter(:,1),1)),(ncc),(ncc))...
    +sparse(inter(:,1),ib,state.frac(ib,2).* rhoskmudkr(i,1).*(dS(ib)).*((G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:))*gravity'),(ncc),(ncc))...
    +sparse(inter(:,2),ib,state.frac(ib,2).* rhoskmudkr(i,1).*(dS(ib)).*((G.cells.centroids(inter(:,1),:)-G.cells.centroids(inter(:,2),:))*gravity'),(ncc),(ncc))...    
    ...
 +sparse(inter(:,1),inter(:,2), sphid(i,1).*0.5.*drho(inter(:,2),3).*(-state.frac(inter(:,2),2)+state.frac(inter(:,1),2)),(ncc),(ncc))...%NEW
    +sparse(inter(:,1),inter(:,1), sphid(i,1).*0.5.*drho(inter(:,1),3).*(-state.frac(inter(:,2),2)+state.frac(inter(:,1),2)),(ncc),(ncc))...
    +sparse(inter(:,2),inter(:,2), sphid(i,1).*0.5.*drho(inter(:,2),3).*(state.frac(inter(:,2),2)-state.frac(inter(:,1),2)),(ncc),(ncc))...
    +sparse(inter(:,2),inter(:,1),sphid(i,1).*0.5.*drho(inter(:,1),3).*(state.frac(inter(:,2),2)-state.frac(inter(:,1),2)),(ncc),(ncc))...
    ...    
+sparse(inter(:,1),inter(:,2), 2.*state.s(inter(:,1),1).^2.*dsphirhod(i,1).*(-dS(inter(:,2))).*(state.frac(inter(:,2),2)-state.frac(inter(:,1),2)),(ncc),(ncc))...
    +sparse(inter(:,1),inter(:,1), 2.*state.s(inter(:,2),1).^2.*dsphirhod(i,1).*(-dS(inter(:,1))).*(state.frac(inter(:,2),2)-state.frac(inter(:,1),2)),(ncc),(ncc))...
     +sparse(inter(:,2),inter(:,2), 2.*state.s(inter(:,1),1).^2.*dsphirhod(i,1).*(-dS(inter(:,2))).*(state.frac(inter(:,1),2)-state.frac(inter(:,2),2)),(ncc),(ncc))...
    +sparse(inter(:,2),inter(:,1), 2.*state.s(inter(:,2),1).^2.*dsphirhod(i,1).*(-dS(inter(:,1))).*(state.frac(inter(:,1),2)-state.frac(inter(:,2),2)),(ncc),(ncc))...
...
+sparse(inter(:,1),inter(:,2), -sphirhod(i,1).*(state.dfrac(inter(:,2),2)),(ncc),(ncc))...
    +sparse(inter(:,1),inter(:,1), sphirhod(i,1).*(state.dfrac(inter(:,1),2)),(ncc),(ncc))...
    +sparse(inter(:,2),inter(:,2), sphirhod(i,1).*(state.dfrac(inter(:,2),2)),(ncc),(ncc))...
    +sparse(inter(:,2),inter(:,1),-sphirhod(i,1).*(state.dfrac(inter(:,1),2)),(ncc),(ncc));

%% m23

d1e=G.cells.volumes./dt.*(state.s(:,1).*state.rho(:,1).*state.frac(:,2)+state.s(:,2).*state.rho(:,2)); 
m23=sparse(1:(ncc),1:(ncc),d1e,(ncc),(ncc));
m23=m23...    
    ...
...
 +sparse(inter(:,1),inter(:,2), srhod(i,1).*0.5.*(-state.frac(inter(:,2),2)+state.frac(inter(:,1),2)),(ncc),(ncc))...
    +sparse(inter(:,1),inter(:,1), srhod(i,1).*0.5.*(-state.frac(inter(:,2),2)+state.frac(inter(:,1),2)),(ncc),(ncc))...
    +sparse(inter(:,2),inter(:,2), srhod(i,1).*0.5.*(state.frac(inter(:,2),2)-state.frac(inter(:,1),2)),(ncc),(ncc))...
    +sparse(inter(:,2),inter(:,1),srhod(i,1).*0.5.*(state.frac(inter(:,2),2)-state.frac(inter(:,1),2)),(ncc),(ncc)); 

% +sparse(inter(:,1),inter(:,2),state.frac(ib,2).*dk(inter(:,2)).*2.*(k(inter(:,1)).^2).*rhomukr(i,1).*(state.pressure(inter(:,1),1)-state.pressure(inter(:,2),1)),(ncc),(ncc))...
%     +sparse(inter(:,1),inter(:,1),state.frac(ib,2).*dk(inter(:,1)).*2.*(k(inter(:,2)).^2).* rhomukr(i,1).*(state.pressure(inter(:,1),1)-state.pressure(inter(:,2),1)),(ncc),(ncc))...
%     +sparse(inter(:,2),inter(:,2),state.frac(ib,2).*dk(inter(:,2)).*2.*(k(inter(:,1)).^2).*rhomukr(i,1).*(state.pressure(inter(:,2),1)-state.pressure(inter(:,1),1)),(ncc),(ncc))...
%     +sparse(inter(:,2),inter(:,1),state.frac(ib,2).*dk(inter(:,1)).*2.*(k(inter(:,2)).^2).*rhomukr(i,1).*(state.pressure(inter(:,2),1)-state.pressure(inter(:,1),1)),(ncc),(ncc))...
%     +sparse(inter(:,1),inter(:,2),state.frac(ib,2).*dk(inter(:,2)).*2.*(k(inter(:,1)).^2).* rhosmukr(i,1).*((G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:))*gravity'),(ncc),(ncc))...
%     +sparse(inter(:,1),inter(:,1),state.frac(ib,2).*dk(inter(:,1)).*2.*(k(inter(:,2)).^2).*rhosmukr(i,1).*((G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:))*gravity'),(ncc),(ncc))...
%     +sparse(inter(:,2),inter(:,2),state.frac(ib,2).*dk(inter(:,2)).*2.*(k(inter(:,1)).^2).*rhosmukr(i,1).*((G.cells.centroids(inter(:,1),:)-G.cells.centroids(inter(:,2),:))*gravity'),(ncc),(ncc))...
%     +sparse(inter(:,2),inter(:,1),state.frac(ib,2).*dk(inter(:,1)).*2.*(k(inter(:,2)).^2).* rhosmukr(i,1).*((G.cells.centroids(inter(:,1),:)-G.cells.centroids(inter(:,2),:))*gravity'),(ncc),(ncc))...
% +sparse(inter(:,1),inter(:,2),dk(inter(:,2)).*2.*(k(inter(:,1)).^2).*rhomukr(i,2).*(state.pressure(inter(:,1),2)-state.pressure(inter(:,2),2)),(ncc),(ncc))...
%     +sparse(inter(:,1),inter(:,1),dk(inter(:,1)).*2.*(k(inter(:,2)).^2).*rhomukr(i,2).*(state.pressure(inter(:,1),2)-state.pressure(inter(:,2),2)),(ncc),(ncc))...
%     +sparse(inter(:,2),inter(:,2),dk(inter(:,2)).*2.*(k(inter(:,1)).^2).*rhomukr(i,2).*(state.pressure(inter(:,2),2)-state.pressure(inter(:,1),2)),(ncc),(ncc))...
%     +sparse(inter(:,2),inter(:,1),dk(inter(:,1)).*2.*(k(inter(:,2)).^2).* rhomukr(i,2).*(state.pressure(inter(:,2),2)-state.pressure(inter(:,1),2)),(ncc),(ncc))...
%     +sparse(inter(:,1),inter(:,2),dk(inter(:,2)).*2.*(k(inter(:,1)).^2).* rhosmukr(i,2).*((G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:))*gravity'),(ncc),(ncc))...
%     +sparse(inter(:,1),inter(:,1),dk(inter(:,1)).*2.*(k(inter(:,2)).^2).* rhosmukr(i,2).*((G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:))*gravity'),(ncc),(ncc))...
%     +sparse(inter(:,2),inter(:,2),dk(inter(:,2)).*2.*(k(inter(:,1)).^2).* rhosmukr(i,2).*((G.cells.centroids(inter(:,1),:)-G.cells.centroids(inter(:,2),:))*gravity'),(ncc),(ncc))...
%     +sparse(inter(:,2),inter(:,1),dk(inter(:,1)).*2.*(k(inter(:,2)).^2).* rhosmukr(i,2).*((G.cells.centroids(inter(:,1),:)-G.cells.centroids(inter(:,2),:))*gravity'),(ncc),(ncc))...


%% m31
d1e=G.cells.volumes.*state.poro./dt.*(state.s(:,1).*drho(:,1).*state.frac(:,3)+state.rho(:,1).*(-dS).*state.frac(:,3)); 
m31=sparse(1:(ncc),1:(ncc),d1e,(ncc),(ncc));

m31=m31...
    +sparse(inter(:,1),ib,state.frac(ib,3).* rhokkrdmu(i,1).*(state.pressure(inter(:,1),1)-state.pressure(inter(:,2),1)),(ncc),(ncc))...
    +sparse(inter(:,2),ib,state.frac(ib,3).* rhokkrdmu(i,1).*(state.pressure(inter(:,2),1)-state.pressure(inter(:,1),1)),(ncc),(ncc))...
    +sparse(inter(:,1),ib,state.frac(ib,3).* rhoskkrdmu(i,1).*((G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:))*gravity'),(ncc),(ncc))...
    +sparse(inter(:,2),ib,state.frac(ib,3).* rhoskkrdmu(i,1).*((G.cells.centroids(inter(:,1),:)-G.cells.centroids(inter(:,2),:))*gravity'),(ncc),(ncc))...
    ...
    +sparse(inter(:,1),ib,state.frac(ib,3).* drhokkrmu(i,1).*(state.pressure(inter(:,1),1)-state.pressure(inter(:,2),1)),(ncc),(ncc))...
    +sparse(inter(:,2),ib,state.frac(ib,3).* drhokkrmu(i,1).*(state.pressure(inter(:,2),1)-state.pressure(inter(:,1),1)),(ncc),(ncc))...
    +sparse(inter(:,1),ib,state.frac(ib,3).* drhoskkrmu(i,1).*((G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:))*gravity'),(ncc),(ncc))...
    +sparse(inter(:,2),ib,state.frac(ib,3).* drhoskkrmu(i,1).*((G.cells.centroids(inter(:,1),:)-G.cells.centroids(inter(:,2),:))*gravity'),(ncc),(ncc))...
...   
+sparse(inter(:,1),inter(:,2),state.frac(ib,3).* rhokmukr(i,1).*(-1),(ncc),(ncc))...
    +sparse(inter(:,1),inter(:,1),state.frac(ib,3).* rhokmukr(i,1).*(1),(ncc),(ncc))...    
   +sparse(inter(:,2),inter(:,1),state.frac(ib,3).* rhokmukr(i,1).*(-1),(ncc),(ncc))...
  +sparse(inter(:,2),inter(:,2),state.frac(ib,3).* rhokmukr(i,1).*(1),(ncc),(ncc))...  
...
      +sparse(inter(:,1),inter(:,2),state.frac(ib,3).* rhokmukr(i,1).*0.5.*drho(inter(:,2),1).*((G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:))*gravity'),(ncc),(ncc))...
    +sparse(inter(:,1),inter(:,1),state.frac(ib,3).* rhokmukr(i,1).*0.5.*drho(inter(:,1),1).*((G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:))*gravity'),(ncc),(ncc))...    
   +sparse(inter(:,2),inter(:,1),state.frac(ib,3).* rhokmukr(i,1).*0.5.*drho(inter(:,1),1).*(-1).*((G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:))*gravity'),(ncc),(ncc))...
  +sparse(inter(:,2),inter(:,2),state.frac(ib,3).* rhokmukr(i,1).*0.5.*drho(inter(:,2),1).*(-1).*((G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:))*gravity'),(ncc),(ncc))...  
    ...
+sparse(inter(:,1),ib,state.frac(ib,3).* rhokmudkr(i,1).*(-dS(ib)).*(state.pressure(inter(:,1),1)-state.pressure(inter(:,2),1)),(ncc),(ncc))...
    +sparse(inter(:,2),ib,state.frac(ib,3).* rhokmudkr(i,1).*(-dS(ib)).*(state.pressure(inter(:,2),1)-state.pressure(inter(:,1),1)),(ncc),(ncc))...
    +sparse(inter(:,1),ib,state.frac(ib,3).* rhoskmudkr(i,1).*(-dS(ib)).*((G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:))*gravity'),(ncc),(ncc))...
    +sparse(inter(:,2),ib,state.frac(ib,3).* rhoskmudkr(i,1).*(-dS(ib)).*((G.cells.centroids(inter(:,1),:)-G.cells.centroids(inter(:,2),:))*gravity'),(ncc),(ncc))...
    ...
 +sparse(inter(:,1),inter(:,2), sphid(i,1).*0.5.*drho(inter(:,2),1).*(-state.frac(inter(:,2),3)+state.frac(inter(:,1),3)),(ncc),(ncc))...
    +sparse(inter(:,1),inter(:,1), sphid(i,1).*0.5.*drho(inter(:,1),1).*(-state.frac(inter(:,2),3)+state.frac(inter(:,1),3)),(ncc),(ncc))...
    +sparse(inter(:,2),inter(:,2), sphid(i,1).*0.5.*drho(inter(:,2),1).*(state.frac(inter(:,2),3)-state.frac(inter(:,1),3)),(ncc),(ncc))...
    +sparse(inter(:,2),inter(:,1),sphid(i,1).*0.5.*drho(inter(:,1),1).*(state.frac(inter(:,2),3)-state.frac(inter(:,1),3)),(ncc),(ncc))...
    ...
    +sparse(inter(:,1),inter(:,2), 2.*state.s(inter(:,1),1).^2.*dsphirhod(i,1).*(-dS(inter(:,2))).*(-state.frac(inter(:,2),3)+state.frac(inter(:,1),3)),(ncc),(ncc))...
    +sparse(inter(:,1),inter(:,1), 2.*state.s(inter(:,2),1).^2.*dsphirhod(i,1).*(-dS(inter(:,1))).*(-state.frac(inter(:,2),3)+state.frac(inter(:,1),3)),(ncc),(ncc))...
     +sparse(inter(:,2),inter(:,2), 2.*state.s(inter(:,1),1).^2.*dsphirhod(i,1).*(-dS(inter(:,2))).*(-state.frac(inter(:,1),3)+state.frac(inter(:,2),3)),(ncc),(ncc))...
    +sparse(inter(:,2),inter(:,1), 2.*state.s(inter(:,2),1).^2.*dsphirhod(i,1).*(-dS(inter(:,1))).*(-state.frac(inter(:,1),3)+state.frac(inter(:,2),3)),(ncc),(ncc));
%% m32


   d1e=G.cells.volumes.*state.poro./dt.*(drho(:,3).*state.s(:,1).*state.frac(:,3)+state.rho(:,1).*dS.*state.frac(:,3)+state.s(:,1).*state.rho(:,1).*state.dfrac(:,3)); 
m32=sparse(1:(ncc),1:(ncc),d1e,(ncc),(ncc));
m32=m32...   
      +sparse(inter(:,1),ib,state.frac(ib,3).* rhokkrdmuC(i,1).*(state.pressure(inter(:,1),1)-state.pressure(inter(:,2),1)),(ncc),(ncc))...%NEW
    +sparse(inter(:,2),ib,state.frac(ib,3).* rhokkrdmuC(i,1).*(state.pressure(inter(:,2),1)-state.pressure(inter(:,1),1)),(ncc),(ncc))...
    +sparse(inter(:,1),ib,state.frac(ib,3).* rhoskkrdmuC(i,1).*((G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:))*gravity'),(ncc),(ncc))...
    +sparse(inter(:,2),ib,state.frac(ib,3).* rhoskkrdmuC(i,1).*((G.cells.centroids(inter(:,1),:)-G.cells.centroids(inter(:,2),:))*gravity'),(ncc),(ncc))...
    ...
    +sparse(inter(:,1),ib,state.frac(ib,3).* drhokkrmuC(i,1).*(state.pressure(inter(:,1),1)-state.pressure(inter(:,2),1)),(ncc),(ncc))...%NEW
    +sparse(inter(:,2),ib,state.frac(ib,3).* drhokkrmuC(i,1).*(state.pressure(inter(:,2),1)-state.pressure(inter(:,1),1)),(ncc),(ncc))...
    +sparse(inter(:,1),ib,state.frac(ib,3).* drhoskkrmuC(i,1).*((G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:))*gravity'),(ncc),(ncc))...
    +sparse(inter(:,2),ib,state.frac(ib,3).* drhoskkrmuC(i,1).*((G.cells.centroids(inter(:,1),:)-G.cells.centroids(inter(:,2),:))*gravity'),(ncc),(ncc))...
    ...
  +sparse(inter(:,1),inter(:,2),state.frac(ib,3).* rhokmukr(i,1).*0.5.*drho(inter(:,2),3).*((G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:))*gravity'),(ncc),(ncc))...%NEW
    +sparse(inter(:,1),inter(:,1),state.frac(ib,3).* rhokmukr(i,1).*0.5.*drho(inter(:,1),3).*((G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:))*gravity'),(ncc),(ncc))...    
   +sparse(inter(:,2),inter(:,1),state.frac(ib,3).* rhokmukr(i,1).*0.5.*drho(inter(:,1),3).*(-1).*((G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:))*gravity'),(ncc),(ncc))...
  +sparse(inter(:,2),inter(:,2),state.frac(ib,3).* rhokmukr(i,1).*0.5.*drho(inter(:,2),3).*(-1).*((G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:))*gravity'),(ncc),(ncc))...  
    ...    
    +sparse(inter(:,1),ib,state.dfrac(ib,3).* rhokmukr(i,1).*(state.pressure(inter(:,1),1)-state.pressure(inter(:,2),1)),(ncc),(ncc))...
    +sparse(inter(:,2),ib,state.dfrac(ib,3).* rhokmukr(i,1).*(state.pressure(inter(:,2),1)-state.pressure(inter(:,1),1)),(ncc),(ncc))...
    +sparse(inter(:,1),ib,state.dfrac(ib,3).* rhoskmukr(i,1).*((G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:))*gravity'),(ncc),(ncc))...
    +sparse(inter(:,2),ib,state.dfrac(ib,3).* rhoskmukr(i,1).*((G.cells.centroids(inter(:,1),:)-G.cells.centroids(inter(:,2),:))*gravity'),(ncc),(ncc))...
...  
+sparse(inter(:,1),ib,state.frac(ib,3).* rhokmudkr(i,1).*(dS(ib)).*(state.pressure(inter(:,1),1)-state.pressure(inter(:,2),1)),(ncc),(ncc))...
    +sparse(inter(:,2),ib,state.frac(ib,3).* rhokmudkr(i,1).*(dS(ib)).*(state.pressure(inter(:,2),1)-state.pressure(inter(:,1),1)),(ncc),(ncc))...
    +sparse(inter(:,1),ib,state.frac(ib,3).* rhoskmudkr(i,1).*(dS(ib)).*((G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:))*gravity'),(ncc),(ncc))...
    +sparse(inter(:,2),ib,state.frac(ib,3).* rhoskmudkr(i,1).*(dS(ib)).*((G.cells.centroids(inter(:,1),:)-G.cells.centroids(inter(:,2),:))*gravity'),(ncc),(ncc))...
 ...
        +sparse(inter(:,1),inter(:,2), sphid(i,1).*0.5.*drho(inter(:,2),3).*(-state.frac(inter(:,2),3)+state.frac(inter(:,1),3)),(ncc),(ncc))...%NEW
    +sparse(inter(:,1),inter(:,1), sphid(i,1).*0.5.*drho(inter(:,1),3).*(-state.frac(inter(:,2),3)+state.frac(inter(:,1),3)),(ncc),(ncc))...
    +sparse(inter(:,2),inter(:,2), sphid(i,1).*0.5.*drho(inter(:,2),3).*(state.frac(inter(:,2),3)-state.frac(inter(:,1),3)),(ncc),(ncc))...
    +sparse(inter(:,2),inter(:,1),sphid(i,1).*0.5.*drho(inter(:,1),3).*(state.frac(inter(:,2),3)-state.frac(inter(:,1),3)),(ncc),(ncc))...
    ...    
+sparse(inter(:,1),inter(:,2), 2.*state.s(inter(:,1),1).^2.*dsphirhod(i,1).*(-dS(inter(:,2))).*(state.frac(inter(:,2),3)-state.frac(inter(:,1),3)),(ncc),(ncc))...
    +sparse(inter(:,1),inter(:,1), 2.*state.s(inter(:,2),1).^2.*dsphirhod(i,1).*(-dS(inter(:,1))).*(state.frac(inter(:,2),3)-state.frac(inter(:,1),3)),(ncc),(ncc))...
     +sparse(inter(:,2),inter(:,2), 2.*state.s(inter(:,1),1).^2.*dsphirhod(i,1).*(-dS(inter(:,2))).*(state.frac(inter(:,1),3)-state.frac(inter(:,2),3)),(ncc),(ncc))...
    +sparse(inter(:,2),inter(:,1), 2.*state.s(inter(:,2),1).^2.*dsphirhod(i,1).*(-dS(inter(:,1))).*(state.frac(inter(:,1),3)-state.frac(inter(:,2),3)),(ncc),(ncc))...
...
+sparse(inter(:,1),inter(:,2), -sphirhod(i,1).*(state.dfrac(inter(:,2),3)),(ncc),(ncc))...
    +sparse(inter(:,1),inter(:,1), sphirhod(i,1).*(state.dfrac(inter(:,1),3)),(ncc),(ncc))...
    +sparse(inter(:,2),inter(:,2), sphirhod(i,1).*(state.dfrac(inter(:,2),3)),(ncc),(ncc))...
    +sparse(inter(:,2),inter(:,1),-sphirhod(i,1).*(state.dfrac(inter(:,1),3)),(ncc),(ncc));

%% m33

d1e=G.cells.volumes./dt.*(state.s(:,1).*state.rho(:,1).*state.frac(:,3)-state.rho(:,3)); 
m33=sparse(1:(ncc),1:(ncc),d1e,(ncc),(ncc));

m33=m33...
  ...
 +sparse(inter(:,1),inter(:,2), srhod(i,1).*0.5.*(-state.frac(inter(:,2),3)+state.frac(inter(:,1),3)),(ncc),(ncc))...
    +sparse(inter(:,1),inter(:,1), srhod(i,1).*0.5.*(-state.frac(inter(:,2),3)+state.frac(inter(:,1),3)),(ncc),(ncc))...
    +sparse(inter(:,2),inter(:,2), srhod(i,1).*0.5.*(state.frac(inter(:,2),3)-state.frac(inter(:,1),3)),(ncc),(ncc))...
    +sparse(inter(:,2),inter(:,1),srhod(i,1).*0.5.*(state.frac(inter(:,2),3)-state.frac(inter(:,1),3)),(ncc),(ncc)); 

%   +sparse(inter(:,1),inter(:,2),state.frac(ib,3).*dk(inter(:,2)).*2.*(k(inter(:,1)).^2).*rhomukr(i,1).*(state.pressure(inter(:,1),1)-state.pressure(inter(:,2),1)),(ncc),(ncc))...
%     +sparse(inter(:,1),inter(:,1),state.frac(ib,3).*dk(inter(:,1)).*2.*(k(inter(:,2)).^2).* rhomukr(i,1).*(state.pressure(inter(:,1),1)-state.pressure(inter(:,2),1)),(ncc),(ncc))...
%     +sparse(inter(:,2),inter(:,2),state.frac(ib,3).*dk(inter(:,2)).*2.*(k(inter(:,1)).^2).*rhomukr(i,1).*(state.pressure(inter(:,2),1)-state.pressure(inter(:,1),1)),(ncc),(ncc))...
%     +sparse(inter(:,2),inter(:,1),state.frac(ib,3).*dk(inter(:,1)).*2.*(k(inter(:,2)).^2).*rhomukr(i,1).*(state.pressure(inter(:,2),1)-state.pressure(inter(:,1),1)),(ncc),(ncc))...
%     +sparse(inter(:,1),inter(:,2),state.frac(ib,3).*dk(inter(:,2)).*2.*(k(inter(:,1)).^2).* rhosmukr(i,1).*((G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:))*gravity'),(ncc),(ncc))...
%     +sparse(inter(:,1),inter(:,1),state.frac(ib,3).*dk(inter(:,1)).*2.*(k(inter(:,2)).^2).* rhosmukr(i,1).*((G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:))*gravity'),(ncc),(ncc))...
%     +sparse(inter(:,2),inter(:,2),state.frac(ib,3).*dk(inter(:,2)).*2.*(k(inter(:,1)).^2).*rhosmukr(i,1).*((G.cells.centroids(inter(:,1),:)-G.cells.centroids(inter(:,2),:))*gravity'),(ncc),(ncc))...
%     +sparse(inter(:,2),inter(:,1),state.frac(ib,3).*dk(inter(:,1)).*2.*(k(inter(:,2)).^2).*rhosmukr(i,1).*((G.cells.centroids(inter(:,1),:)-G.cells.centroids(inter(:,2),:))*gravity'),(ncc),(ncc))...

%% pressure boundary
if ~isempty(bc)

    pb=zeros(G.faces.num,2);
pb(bc.face,:)=[bc.value,bc.value];
bb=false(G.faces.num,1);
bb(bc.face)=true;
bcell=sum(neighborship(bb,:),2);
pb(bc.face,2)=pb(bc.face,1)+(state.pressure(bcell,2)-state.pressure(bcell,1));
state.flux(bc.face,1)=fht(bb).*kr(bcell,1)./state.mu(bcell,1).*(state.pressure(bcell,1)-pb(bc.face,1)+state.rho(bcell,1).*(G.faces.centroids(bb,:)-G.cells.centroids(bcell,:))*gravity')./G.faces.areas(bb);
state.flux(bc.face,2)=fht(bb).*kr(bcell,2)./state.mu(bcell,2).*(state.pressure(bcell,2)-pb(bc.face,2)+state.rho(bcell,2).*(G.faces.centroids(bb,:)-G.cells.centroids(bcell,:))*gravity')./G.faces.areas(bb);
 outflux=zeros(1,2);
 outflux(1,1)=(sum(state.flux(bc.face,1).*state.rho(bcell,1).*state.frac(bcell,1).*G.faces.areas(bb))).*dt;
 outflux(1,2)=(sum(state.flux(bc.face,1).*state.rho(bcell,1).*state.frac(bcell,2).*G.faces.areas(bb))+sum(state.flux(bc.face,2).*state.rho(bcell,2).*G.faces.areas(bb))).*dt;
 flux=state.flux;
 state.outflux=outflux;
rhokmudkr(bb,1)=state.rho(bcell,1).*fht(bb).*dkr(bcell,1)./state.mu(bcell,1);
  rhokmudkr(bb,2)=state.rho(bcell,2).*fht(bb).*dkr(bcell,2)./state.mu(bcell,2);
    rhoskmudkr(bb,1)=state.rho(bcell,1).^2.*fht(bb).*dkr(bcell,1)./state.mu(bcell,1);
  rhoskmudkr(bb,2)=state.rho(bcell,2).^2.*fht(bb).*dkr(bcell,2)./state.mu(bcell,2);
   rhokmukr(bb,1)=state.rho(bcell,1).*fht(bb).*kr(bcell,1)./state.mu(bcell,1);
  rhokmukr(bb,2)=state.rho(bcell,2).*fht(bb).*kr(bcell,2)./state.mu(bcell,2);
  rhokkrdmu(bb,1)=state.rho(bcell,1).*fht(bb).*kr(bcell,1)./(state.mu(bcell,1)).^2.*(-dmu(bcell,1));
rhokkrdmu(bb,2)=state.rho(bcell,2).*fht(bb).*kr(bcell,2)./(state.mu(bcell,2)).^2.*(-dmu(bcell,2));
rhoskkrdmu(bb,1)=state.rho(bcell,1).^2.*fht(bb).*kr(bcell,1)./(state.mu(bcell,1)).^2.*(-dmu(bcell,1));
rhoskkrdmu(bb,2)=state.rho(bcell,2).^2.*fht(bb).*kr(bcell,2)./(state.mu(bcell,2)).^2.*(-dmu(bcell,2));
 drhokkrmu(bb,1)=drho(bcell,1).*fht(bb).*kr(bcell,1)./(state.mu(bcell,1));
drhokkrmu(bb,2)=drho(bcell,2).*fht(bb).*kr(bcell,2)./(state.mu(bcell,2));  
drhoskkrmu(bb,1)=state.rho(bcell,1).*drho(bcell,1).*fht(bb).*kr(bcell,1)./(state.mu(bcell,1));
drhoskkrmu(bb,2)=state.rho(bcell,2).*drho(bcell,2).*fht(bb).*kr(bcell,2)./(state.mu(bcell,2));
  
 rhokkrdmuC(bb,1)=state.rho(bcell,1).*fht(bb).*kr(bcell,1)./(state.mu(bcell,1)).^2.*(-dmu(bcell,3));
rhokkrdmuC(bb,2)=state.rho(bcell,2).*fht(bb).*kr(bcell,2)./(state.mu(bcell,2)).^2.*(-dmu(bcell,4));
rhoskkrdmuC(bb,1)=state.rho(bcell,1).^2.*fht(bb).*kr(bcell,1)./(state.mu(bcell,1)).^2.*(-dmu(bcell,3));
rhoskkrdmuC(bb,2)=state.rho(bcell,2).^2.*fht(bb).*kr(bcell,2)./(state.mu(bcell,2)).^2.*(-dmu(bcell,4));
 drhokkrmuC(bb,1)=drho(bcell,3).*fht(bb).*kr(bcell,1)./(state.mu(bcell,1));
drhokkrmuC(bb,2)=drho(bcell,4).*fht(bb).*kr(bcell,2)./(state.mu(bcell,2));
drhoskkrmuC(bb,1)=state.rho(bcell,1).*drho(bcell,3).*fht(bb).*kr(bcell,1)./(state.mu(bcell,1));
drhoskkrmuC(bb,2)=state.rho(bcell,2).*drho(bcell,4).*fht(bb).*kr(bcell,2)./(state.mu(bcell,2));


rhoskmukr(bb,1)=state.rho(bcell,1).^2.*fht(bb).*kr(bcell,1)./state.mu(bcell,1);
  rhoskmukr(bb,2)=state.rho(bcell,2).^2.*fht(bb).*kr(bcell,2)./state.mu(bcell,2);
  
  %rhomukr(bb,1)=state.rho(bcell,1).*kr(bcell,1)./state.mu(bcell,1).*G.faces.areas(bb)./abs(sum(G.faces.centroids(bb,:)-G.cells.centroids(bcell,:),2));
  %rhomukr(bb,2)=state.rho(bcell,2).*kr(bcell,2)./state.mu(bcell,2).*G.faces.areas(bb)./abs(sum(G.faces.centroids(bb,:)-G.cells.centroids(bcell,:),2));
 
  %rhosmukr(bb,1)=state.rho(bcell,1).^2.*kr(bcell,1)./state.mu(bcell,1).*G.faces.areas(bb)./abs(sum(G.faces.centroids(bb,:)-G.cells.centroids(bcell,:),2));
  %rhosmukr(bb,2)=state.rho(bcell,2).^2.*kr(bcell,2)./state.mu(bcell,2).*G.faces.areas(bb)./abs(sum(G.faces.centroids(bb,:)-G.cells.centroids(bcell,:),2));
 
%% m11
m11=m11...
    +sparse(bcell,bcell,state.frac(bcell,1).* rhokkrdmu(bb,1).*(-pb(bb,1)+state.pressure(bcell,1)),(ncc),(ncc))...
  +sparse(bcell,bcell,state.frac(bcell,1).* rhoskkrdmu(bb,1).*((G.faces.centroids(bb,:)-G.cells.centroids(bcell,:))*gravity'),(ncc),(ncc))...    
      +sparse(bcell,bcell,state.frac(bcell,1).* drhokkrmu(bb,1).*(-pb(bb,1)+state.pressure(bcell,1)),(ncc),(ncc))...
  +sparse(bcell,bcell,state.frac(bcell,1).* drhoskkrmu(bb,1).*((G.faces.centroids(bb,:)-G.cells.centroids(bcell,:))*gravity'),(ncc),(ncc))...  
   +sparse(bcell,bcell,state.frac(bcell,1).* rhokmudkr(bb,1).*(-dS(bcell)).*(-pb(bb,1)+state.pressure(bcell,1)),(ncc),(ncc))...
  +sparse(bcell,bcell,state.frac(bcell,1).* rhoskmudkr(bb,1).*(-dS(bcell)).*((G.faces.centroids(bb,:)-G.cells.centroids(bcell,:))*gravity'),(ncc),(ncc))...  
     +sparse(bcell,bcell,state.frac(bcell,1).* rhokmukr(bb,1).*(1),(ncc),(ncc))...
      +sparse(bcell,bcell,state.frac(bcell,1).* rhokmukr(bb,1).*drho(bcell,1).*((G.faces.centroids(bb,:)-G.cells.centroids(bcell,:))*gravity'),(ncc),(ncc));


   

% m12

   
   
m12=m12...
        +sparse(bcell,bcell,state.frac(bcell,1).* rhokkrdmuC(bb,1).*(-pb(bb,1)+state.pressure(bcell,1)),(ncc),(ncc))...%NEW
  +sparse(bcell,bcell,state.frac(bcell,1).* rhoskkrdmuC(bb,1).*((G.faces.centroids(bb,:)-G.cells.centroids(bcell,:))*gravity'),(ncc),(ncc))...    
      +sparse(bcell,bcell,state.frac(bcell,1).* drhokkrmuC(bb,1).*(-pb(bb,1)+state.pressure(bcell,1)),(ncc),(ncc))...
  +sparse(bcell,bcell,state.frac(bcell,1).* drhoskkrmuC(bb,1).*((G.faces.centroids(bb,:)-G.cells.centroids(bcell,:))*gravity'),(ncc),(ncc))...  
  ...
    +sparse(bcell,bcell,state.dfrac(bcell,1).* rhokmukr(bb,1).*(-pb(bb,1)+state.pressure(bcell,1)),(ncc),(ncc))...
  +sparse(bcell,bcell,state.dfrac(bcell,1).* rhoskmukr(bb,1).*((G.faces.centroids(bb,:)-G.cells.centroids(bcell,:))*gravity'),(ncc),(ncc))...  
 +sparse(bcell,bcell,(state.frac(bcell,1)).* rhokmudkr(bb,1).*(dS(bcell)).*(-pb(bb,1)+state.pressure(bcell,1)),(ncc),(ncc))...
   +sparse(bcell,bcell,(state.frac(bcell,1)).* rhoskmudkr(bb,1).*(dS(bcell)).*((G.faces.centroids(bb,:)-G.cells.centroids(bcell,:))*gravity'),(ncc),(ncc))...
   +sparse(bcell,bcell,state.frac(bcell,1).* rhokmukr(bb,1).*drho(bcell,3).*((G.faces.centroids(bb,:)-G.cells.centroids(bcell,:))*gravity'),(ncc),(ncc));%NEW
 %m13
% m13=m13...
%     +sparse(bcell,bcell,state.frac(bcell,1).*dk(bcell).* rhomukr(bb,1).*(-pb(bb,1)+state.pressure(bcell,1)),(ncc),(ncc))...
%   +sparse(bcell,bcell,state.frac(bcell,1).*dk(bcell).* rhosmukr(bb,1).*((G.faces.centroids(bb,:)-G.cells.centroids(bcell,:))*gravity'),(ncc),(ncc));
  
 % m21
m21=m21...
    +sparse(bcell,bcell,state.frac(bcell,2).* rhokkrdmu(bb,1).*(-pb(bb,1)+state.pressure(bcell,1)),(ncc),(ncc))...
  +sparse(bcell,bcell,state.frac(bcell,2).* rhoskkrdmu(bb,1).*((G.faces.centroids(bb,:)-G.cells.centroids(bcell,:))*gravity'),(ncc),(ncc))...    
      +sparse(bcell,bcell,state.frac(bcell,2).* drhokkrmu(bb,1).*(-pb(bb,1)+state.pressure(bcell,1)),(ncc),(ncc))...
  +sparse(bcell,bcell,state.frac(bcell,2).* drhoskkrmu(bb,1).*((G.faces.centroids(bb,:)-G.cells.centroids(bcell,:))*gravity'),(ncc),(ncc))...  
    +sparse(bcell,bcell,state.frac(bcell,2).* rhokmudkr(bb,1).*(-dS(bcell)).*(-pb(bb,1)+state.pressure(bcell,1)),(ncc),(ncc))...
  +sparse(bcell,bcell,state.frac(bcell,2).* rhoskmudkr(bb,1).*(-dS(bcell)).*((G.faces.centroids(bb,:)-G.cells.centroids(bcell,:))*gravity'),(ncc),(ncc))...  
   +sparse(bcell,bcell, rhokmudkr(bb,2).*(-dS(bcell)).*(-pb(bb,2)+state.pressure(bcell,2)),(ncc),(ncc))...
   +sparse(bcell,bcell,rhoskmudkr(bb,2).*(-dS(bcell)).*((G.faces.centroids(bb,:)-G.cells.centroids(bcell,:))*gravity'),(ncc),(ncc))...
   ...
   +sparse(bcell,bcell,state.frac(bcell,2).* rhokmukr(bb,1).*(1),(ncc),(ncc))...
    +sparse(bcell,bcell, rhokmukr(bb,2).*(1),(ncc),(ncc))...%pb_g=pb+p_g-p_l;p_g-pb_g=p_l-pb_l
    +sparse(bcell,bcell,state.frac(bcell,2).* rhokmukr(bb,1).*drho(bcell,1).*((G.faces.centroids(bb,:)-G.cells.centroids(bcell,:))*gravity'),(ncc),(ncc));

%m22
m22=m22...
    +sparse(bcell,bcell, rhokkrdmu(bb,2).*(-pb(bb,2)+state.pressure(bcell,2)),(ncc),(ncc))...
  +sparse(bcell,bcell,rhoskkrdmu(bb,2).*((G.faces.centroids(bb,:)-G.cells.centroids(bcell,:))*gravity'),(ncc),(ncc))...    
      +sparse(bcell,bcell,drhokkrmu(bb,2).*(-pb(bb,2)+state.pressure(bcell,2)),(ncc),(ncc))...
  +sparse(bcell,bcell, drhoskkrmu(bb,2).*((G.faces.centroids(bb,:)-G.cells.centroids(bcell,:))*gravity'),(ncc),(ncc))...  
  ...
   +sparse(bcell,bcell,state.frac(bcell,2).* rhokkrdmuC(bb,1).*(-pb(bb,1)+state.pressure(bcell,1)),(ncc),(ncc))...%NEW
  +sparse(bcell,bcell,state.frac(bcell,2).* rhoskkrdmuC(bb,1).*((G.faces.centroids(bb,:)-G.cells.centroids(bcell,:))*gravity'),(ncc),(ncc))...    
      +sparse(bcell,bcell,state.frac(bcell,2).* drhokkrmuC(bb,1).*(-pb(bb,1)+state.pressure(bcell,1)),(ncc),(ncc))...
  +sparse(bcell,bcell,state.frac(bcell,2).* drhoskkrmuC(bb,1).*((G.faces.centroids(bb,:)-G.cells.centroids(bcell,:))*gravity'),(ncc),(ncc))...  
  +sparse(bcell,bcell, rhokmudkr(bb,2).*(dS(bcell)).*(-pb(bb,2)+state.pressure(bcell,2)),(ncc),(ncc))...
  +sparse(bcell,bcell,rhoskmudkr(bb,2).*(dS(bcell)).*((G.faces.centroids(bb,:)-G.cells.centroids(bcell,:))*gravity'),(ncc),(ncc))...  
  +sparse(bcell,bcell,state.dfrac(bcell,2).* rhokmukr(bb,1).*(-pb(bb,1)+state.pressure(bcell,1)),(ncc),(ncc))...
  +sparse(bcell,bcell,state.dfrac(bcell,2).* rhoskmukr(bb,1).*((G.faces.centroids(bb,:)-G.cells.centroids(bcell,:))*gravity'),(ncc),(ncc))...  
 +sparse(bcell,bcell,(state.frac(bcell,2)).* rhokmudkr(bb,1).*(dS(bcell)).*(-pb(bb,1)+state.pressure(bcell,1)),(ncc),(ncc))...
   +sparse(bcell,bcell,(state.frac(bcell,2)).* rhoskmudkr(bb,1).*(dS(bcell)).*((G.faces.centroids(bb,:)-G.cells.centroids(bcell,:))*gravity'),(ncc),(ncc))...
   ...
  +sparse(bcell,bcell,rhokmukr(bb,2).*(0),(ncc),(ncc))...%pb_g=pb+p_g-p_l;p_g-pb_g=p_l-pb_l
    +sparse(bcell,bcell,rhokmukr(bb,2).*drho(bcell,2).*((G.faces.centroids(bb,:)-G.cells.centroids(bcell,:))*gravity'),(ncc),(ncc))...
    +sparse(bcell,bcell,state.frac(bcell,2).* rhokmukr(bb,1).*drho(bcell,3).*((G.faces.centroids(bb,:)-G.cells.centroids(bcell,:))*gravity'),(ncc),(ncc));%NEW
  
  % m23
% m23=m23...
%     +sparse(bcell,bcell,state.frac(bcell,2).*dk(bcell).* rhomukr(bb,1).*(-pb(bb,1)+state.pressure(bcell,1)),(ncc),(ncc))...
%   +sparse(bcell,bcell,state.frac(bcell,2).*dk(bcell).* rhosmukr(bb,1).*((G.faces.centroids(bb,:)-G.cells.centroids(bcell,:))*gravity'),(ncc),(ncc))...
% +sparse(bcell,bcell,dk(bcell).* rhomukr(bb,2).*(-pb(bb,1)+state.pressure(bcell,1)),(ncc),(ncc))...
%   +sparse(bcell,bcell,dk(bcell).* rhosmukr(bb,2).*((G.faces.centroids(bb,:)-G.cells.centroids(bcell,:))*gravity'),(ncc),(ncc));

  

% m31
m31=m31...
    +sparse(bcell,bcell,state.frac(bcell,3).* rhokkrdmu(bb,1).*(-pb(bb,1)+state.pressure(bcell,1)),(ncc),(ncc))...
  +sparse(bcell,bcell,state.frac(bcell,3).* rhoskkrdmu(bb,1).*((G.faces.centroids(bb,:)-G.cells.centroids(bcell,:))*gravity'),(ncc),(ncc))...    
      +sparse(bcell,bcell,state.frac(bcell,3).* drhokkrmu(bb,1).*(-pb(bb,1)+state.pressure(bcell,1)),(ncc),(ncc))...
  +sparse(bcell,bcell,state.frac(bcell,3).* drhoskkrmu(bb,1).*((G.faces.centroids(bb,:)-G.cells.centroids(bcell,:))*gravity'),(ncc),(ncc))...  
   +sparse(bcell,bcell,state.frac(bcell,3).* rhokmudkr(bb,1).*(-dS(bcell)).*(-pb(bb,1)+state.pressure(bcell,1)),(ncc),(ncc))...
  +sparse(bcell,bcell,state.frac(bcell,3).* rhoskmudkr(bb,1).*(-dS(bcell)).*((G.faces.centroids(bb,:)-G.cells.centroids(bcell,:))*gravity'),(ncc),(ncc))...  
     +sparse(bcell,bcell,state.frac(bcell,3).* rhokmukr(bb,1).*(1),(ncc),(ncc))...
      +sparse(bcell,bcell,state.frac(bcell,3).* rhokmukr(bb,1).*drho(bcell,1).*((G.faces.centroids(bb,:)-G.cells.centroids(bcell,:))*gravity'),(ncc),(ncc));


   

% m32

   
   
 m32=m32...
        +sparse(bcell,bcell,state.frac(bcell,3).* rhokkrdmuC(bb,1).*(-pb(bb,1)+state.pressure(bcell,1)),(ncc),(ncc))...%NEW
  +sparse(bcell,bcell,state.frac(bcell,3).* rhoskkrdmuC(bb,1).*((G.faces.centroids(bb,:)-G.cells.centroids(bcell,:))*gravity'),(ncc),(ncc))...    
      +sparse(bcell,bcell,state.frac(bcell,3).* drhokkrmuC(bb,1).*(-pb(bb,1)+state.pressure(bcell,1)),(ncc),(ncc))...
  +sparse(bcell,bcell,state.frac(bcell,3).* drhoskkrmuC(bb,1).*((G.faces.centroids(bb,:)-G.cells.centroids(bcell,:))*gravity'),(ncc),(ncc))...  
  ...
    +sparse(bcell,bcell,state.dfrac(bcell,3).* rhokmukr(bb,1).*(-pb(bb,1)+state.pressure(bcell,1)),(ncc),(ncc))...
  +sparse(bcell,bcell,state.dfrac(bcell,3).* rhoskmukr(bb,1).*((G.faces.centroids(bb,:)-G.cells.centroids(bcell,:))*gravity'),(ncc),(ncc))...  
 +sparse(bcell,bcell,(state.frac(bcell,3)).* rhokmudkr(bb,1).*(dS(bcell)).*(-pb(bb,1)+state.pressure(bcell,1)),(ncc),(ncc))...
   +sparse(bcell,bcell,(state.frac(bcell,3)).* rhoskmudkr(bb,1).*(dS(bcell)).*((G.faces.centroids(bb,:)-G.cells.centroids(bcell,:))*gravity'),(ncc),(ncc))...
   +sparse(bcell,bcell,state.frac(bcell,3).* rhokmukr(bb,1).*drho(bcell,3).*((G.faces.centroids(bb,:)-G.cells.centroids(bcell,:))*gravity'),(ncc),(ncc));%NEW
 %m13
% m33=m33...
%     +sparse(bcell,bcell,state.frac(bcell,3).*dk(bcell).* rhomukr(bb,1).*(-pb(bb,1)+state.pressure(bcell,1)),(ncc),(ncc))...
%   +sparse(bcell,bcell,state.frac(bcell,3).*dk(bcell).* rhosmukr(bb,1).*((G.faces.centroids(bb,:)-G.cells.centroids(bcell,:))*gravity'),(ncc),(ncc));
%  


end



%due to wells 
nw=length(W);
wsat=state.s;

for kw=1:nw
    wc=W(kw).cells;
    wsat(wc,:)=repmat(W(kw).compi,[length(wc),1]);
end

krw=fluid.relperm(wsat);%%%%%%be careful about the the relative permeability;state.s


wCol1=sparse([],[],[],ncc,nw);
wCol2=sparse([],[],[],ncc,nw);
wCol3=sparse([],[],[],ncc,nw);
wRow1=sparse([],[],[],nw,ncc);
wRow2=sparse([],[],[],nw,ncc);
wRow3=sparse([],[],[],nw,ncc);
wCor=sparse([],[],[],nw,nw);

 
 
for ki= 1 : nw
   

 
       if W(ki).compi(1)==1 %inject brine
%        [W(ki).rho,W(ki).mu]=rhomu_p_frac(W(ki).pressure,[],state.m_NaCl);  
%        W(ki).dfrac=[0,0,0,0];
%        [drhow,dmuw]=D_RHOMU(W(ki));
% 
%        wc=W(ki).cells;

                  
     W(ki).dfrac=[0 0 0 0];
           W(ki).Tk=state.Tk;
           W(ki).salinity=state.salinity(W(ki).cells(1),:);
           W(ki).dsp=state.dsp(W(ki).cells(1),:);
           W(ki).dcp=state.dcp(W(ki).cells(1),:);
           W(ki).species=state.species(W(ki).cells(1),:);
            W(ki).m_NaCl=state.m_NaCl;
             W(ki).rhoref=state.rhoref;
       [W(ki).rho,W(ki).mu]=rhomu_p_frac_kinetic(W(ki));  
       
       [drhow,dmuw]=D_RHOMU_kinetic(W(ki));

       wc=W(ki).cells;

%      WG=-(drhow(1).*W(ki).WI.*krw(wc,1)./W(ki).mu(1)+W(ki).rho(1).*W(ki).WI.*krw(wc,1)./W(ki).mu(1).^2.*(-dmuw(1)))...
%          .*(W(ki).pressure-state.pressure(wc,1)+W(ki).rho(1).*W(ki).dZ.*norm(gravity))...
%          -W(ki).rho(1).*W(ki).WI.*krw(wc,1)./W(ki).mu(1)...
%          -W(ki).rho(1).*W(ki).WI.*krw(wc,1)./W(ki).mu(1).*drhow(1).*W(ki).dZ.*norm(gravity);
%      FG=W(ki).rho(1).*W(ki).WI.*krw(wc,1)./W(ki).mu(1);
%     Wdg=sum(WG);
%    wCol1=wCol1+sparse(wc,ki,WG,(ncc),(nw));
%    wRow1=wRow1+sparse(ki,wc,-FG,(nw),(ncc));
%      wCor=wCor+sparse(ki,ki,-Wdg,(nw),(nw));
%        m11=m11+sparse(wc,wc,FG,(ncc),(ncc));


     %for water component
       WG=-((W(ki).dfrac(1)).*W(ki).rho(1).*W(ki).WI.*krw(wc,1)./W(ki).mu(1)...
      + W(ki).frac(1).*drhow(1).*W(ki).WI.*krw(wc,1)./W(ki).mu(1)...
           +W(ki).frac(1).*W(ki).rho(1).*W(ki).WI.*krw(wc,1)./W(ki).mu(1).^2.*(-dmuw(1)))...
         .*(W(ki).pressure-state.pressure(wc,1)+W(ki).rho(1).*W(ki).dZ.*norm(gravity))...
         -W(ki).frac(1).*W(ki).rho(1).*W(ki).WI.*krw(wc,1)./W(ki).mu(1)...
         -W(ki).frac(1).*W(ki).rho(1).*W(ki).WI.*krw(wc,1)./W(ki).mu(1).*drhow(1).*W(ki).dZ.*norm(gravity);
     FG=W(ki).frac(1).*W(ki).rho(1).*W(ki).WI.*krw(wc,1)./W(ki).mu(1);
    Wdg=sum(WG);
       wCol1=wCol1+sparse(wc,ki,WG,(ncc),(nw));
   wRow1=wRow1+sparse(ki,wc,-FG,(nw),(ncc));
     wCor=wCor+sparse(ki,ki,-Wdg,(nw),(nw));
       
     m11=m11+sparse(wc,wc,FG,(ncc),(ncc));

%for co2 component
       WG=-(W(ki).frac(2).*drhow(1).*W(ki).WI.*krw(wc,1)./W(ki).mu(1)...
           +W(ki).frac(2).*W(ki).rho(1).*W(ki).WI.*krw(wc,1)./W(ki).mu(1).^2.*(-dmuw(1)))...
         .*(W(ki).pressure-state.pressure(wc,1)+W(ki).rho(1).*W(ki).dZ.*norm(gravity))...
         -W(ki).frac(2).*W(ki).rho(1).*W(ki).WI.*krw(wc,1)./W(ki).mu(1)...
         -W(ki).frac(2).*W(ki).rho(1).*W(ki).WI.*krw(wc,1)./W(ki).mu(1).*drhow(1).*W(ki).dZ.*norm(gravity);
     FG=W(ki).frac(2).*W(ki).rho(1).*W(ki).WI.*krw(wc,1)./W(ki).mu(1);
    Wdg=sum(WG);
       wCol2=wCol2+sparse(wc,ki,WG,(ncc),(nw));
   wRow1=wRow1+sparse(ki,wc,-FG,(nw),(ncc));
     wCor=wCor+sparse(ki,ki,-Wdg,(nw),(nw));
       
     m21=m21+sparse(wc,wc,FG,(ncc),(ncc));
     
%for mineral component
       WG=-(W(ki).frac(3).*drhow(1).*W(ki).WI.*krw(wc,1)./W(ki).mu(1)...
           +W(ki).frac(3).*W(ki).rho(1).*W(ki).WI.*krw(wc,1)./W(ki).mu(1).^2.*(-dmuw(1)))...
         .*(W(ki).pressure-state.pressure(wc,1)+W(ki).rho(1).*W(ki).dZ.*norm(gravity))...
         -W(ki).frac(3).*W(ki).rho(1).*W(ki).WI.*krw(wc,1)./W(ki).mu(1)...
         -W(ki).frac(3).*W(ki).rho(1).*W(ki).WI.*krw(wc,1)./W(ki).mu(1).*drhow(1).*W(ki).dZ.*norm(gravity);
     FG=W(ki).frac(3).*W(ki).rho(1).*W(ki).WI.*krw(wc,1)./W(ki).mu(1);
    Wdg=sum(WG);
       wCol3=wCol3+sparse(wc,ki,WG,(ncc),(nw));
   wRow1=wRow1+sparse(ki,wc,-FG,(nw),(ncc));
     wCor=wCor+sparse(ki,ki,-Wdg,(nw),(nw));
       
     m31=m31+sparse(wc,wc,FG,(ncc),(ncc));
     
     
       else
                
  
                  W(ki).frac=[0 0 0 1];
     W(ki).dfrac=[0 0 0 0];
           W(ki).Tk=state.Tk;
           W(ki).salinity=state.salinity(W(ki).cells(1),:);
           W(ki).dsp=state.dsp(W(ki).cells(1),:);
           W(ki).dcp=state.dcp(W(ki).cells(1),:);
           W(ki).species=state.species(W(ki).cells(1),:);
            W(ki).m_NaCl=state.m_NaCl;
             W(ki).rhoref=state.rhoref;
       [W(ki).rho,W(ki).mu]=rhomu_p_frac_kinetic(W(ki));  
       
       [drhow,dmuw]=D_RHOMU_kinetic(W(ki));

       wc=W(ki).cells;
         %for co2 species
       WG=-(W(ki).frac(4).*drhow(2).*W(ki).WI.*krw(wc,2)./W(ki).mu(2)...
           +W(ki).frac(4).*W(ki).rho(2).*W(ki).WI.*krw(wc,2)./W(ki).mu(2).^2.*(-dmuw(2)))...
         .*(W(ki).pressure-state.pressure(wc,2)+W(ki).rho(2).*W(ki).dZ.*norm(gravity))...
         -W(ki).frac(4).*W(ki).rho(2).*W(ki).WI.*krw(wc,2)./W(ki).mu(2)...
         -W(ki).frac(4).*W(ki).rho(2).*W(ki).WI.*krw(wc,2)./W(ki).mu(2).*drhow(2).*W(ki).dZ.*norm(gravity);
     FG=W(ki).frac(4).*W(ki).rho(2).*W(ki).WI.*krw(wc,2)./W(ki).mu(2);
    Wdg=sum(WG);
       wCol2=wCol2+sparse(wc,ki,WG,(ncc),(nw));
   wRow2=wRow2+sparse(ki,wc,-FG,(nw),(ncc));
     wCor=wCor+sparse(ki,ki,-Wdg,(nw),(nw));
       
     m22=m22+sparse(wc,wc,FG,(ncc),(ncc));
     
     %for water species
       WG=-((W(ki).dfrac(4)+W(ki).dfrac(2)).*W(ki).rho(2).*W(ki).WI.*krw(wc,2)./W(ki).mu(2)...
      + W(ki).frac(3).*drhow(2).*W(ki).WI.*krw(wc,2)./W(ki).mu(2)...
           +W(ki).frac(3).*W(ki).rho(2).*W(ki).WI.*krw(wc,2)./W(ki).mu(2).^2.*(-dmuw(2)))...
         .*(W(ki).pressure-state.pressure(wc,2)+W(ki).rho(2).*W(ki).dZ.*norm(gravity))...
         -W(ki).frac(3).*W(ki).rho(2).*W(ki).WI.*krw(wc,2)./W(ki).mu(2)...
         -W(ki).frac(3).*W(ki).rho(2).*W(ki).WI.*krw(wc,2)./W(ki).mu(2).*drhow(2).*W(ki).dZ.*norm(gravity);
     FG=W(ki).frac(3).*W(ki).rho(2).*W(ki).WI.*krw(wc,2)./W(ki).mu(2);
    Wdg=sum(WG);
       wCol1=wCol1+sparse(wc,ki,WG,(ncc),(nw));
   wRow2=wRow2+sparse(ki,wc,-FG,(nw),(ncc));
     wCor=wCor+sparse(ki,ki,-Wdg,(nw),(nw));
       
     m12=m12+sparse(wc,wc,FG,(ncc),(ncc));
     
      
   
       end
end









%% rhs

 

d1e=-G.cells.volumes./dt.*...
    (state.rho(:,1).*state.s(:,1).*state.frac(:,1).*state.poro-state.rho0(:,1).*state.s0(:,1).*state.frac0(:,1).*state.poro0); 
R1=sparse(1:(ncc),1,d1e,(ncc),1);
R1=R1...
    +sparse(inter(:,1),1,-state.frac(ib,1).* rhokmukr(i,1).*(state.pressure(inter(:,1),1)-state.pressure(inter(:,2),1)),(ncc),1)...
    +sparse(inter(:,2),1,-state.frac(ib,1).* rhokmukr(i,1).*(state.pressure(inter(:,2),1)-state.pressure(inter(:,1),1)),(ncc),1)...
    +sparse(inter(:,1),1,-state.frac(ib,1).* rhoskmukr(i,1).*((G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:))*gravity'),(ncc),1)...
    +sparse(inter(:,2),1,-state.frac(ib,1).* rhoskmukr(i,1).*((G.cells.centroids(inter(:,1),:)-G.cells.centroids(inter(:,2),:))*gravity'),(ncc),1)...
   ...
    +sparse(inter(:,1),1, sphirhod(i,1).*(state.frac(inter(:,2),1)-state.frac(inter(:,1),1)),(ncc),1)...
    +sparse(inter(:,2),1, sphirhod(i,1).*(state.frac(inter(:,1),1)-state.frac(inter(:,2),1)),(ncc),1);


d1e=-G.cells.volumes./dt.*...
    (state.rho(:,1).*state.s(:,1).*state.frac(:,2).*state.poro-state.rho0(:,1).*state.s0(:,1).*state.frac0(:,2).*state.poro0...
+state.rho(:,2).*state.s(:,2).*state.poro-state.rho0(:,2).*state.s0(:,2).*state.poro0); 
R2=sparse(1:(ncc),1,d1e,(ncc),1);

R2=R2...
     +sparse(inter(:,1),1,-(state.frac(ib,2)).* rhokmukr(i,1).*(state.pressure(inter(:,1),1)-state.pressure(inter(:,2),1)),(ncc),1)...
    +sparse(inter(:,2),1,-(state.frac(ib,2)).* rhokmukr(i,1).*(state.pressure(inter(:,2),1)-state.pressure(inter(:,1),1)),(ncc),1)...
    +sparse(inter(:,1),1,-(state.frac(ib,2)).* rhoskmukr(i,1).*((G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:))*gravity'),(ncc),1)...
    +sparse(inter(:,2),1,-(state.frac(ib,2)).* rhoskmukr(i,1).*((G.cells.centroids(inter(:,1),:)-G.cells.centroids(inter(:,2),:))*gravity'),(ncc),1)...
    ...
    +sparse(inter(:,1),1,-rhokmukr(i,2).*(state.pressure(inter(:,1),2)-state.pressure(inter(:,2),2)),(ncc),1)...
    +sparse(inter(:,2),1,- rhokmukr(i,2).*(state.pressure(inter(:,2),2)-state.pressure(inter(:,1),2)),(ncc),1)...
    +sparse(inter(:,1),1,-rhoskmukr(i,2).*((G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:))*gravity'),(ncc),1)...
    +sparse(inter(:,2),1,-rhoskmukr(i,2).*((G.cells.centroids(inter(:,1),:)-G.cells.centroids(inter(:,2),:))*gravity'),(ncc),1)...
    ...
    +sparse(inter(:,1),1, sphirhod(i,1).*(state.frac(inter(:,2),2)-state.frac(inter(:,1),2)),(ncc),1)...
    +sparse(inter(:,2),1, sphirhod(i,1).*(state.frac(inter(:,1),2)-state.frac(inter(:,2),2)),(ncc),1);

 psp=state.pressure(:,2)<state.pressure(:,1);
% 
%  R2=R2+sparse(G.cells.indexMap(psp),1,-state.species(psp,2)+state.species0(psp,2),ncc,1);



d1e=-G.cells.volumes./dt.*...
    (state.rho(:,1).*state.s(:,1).*state.frac(:,3).*state.poro-state.rho0(:,1).*state.s0(:,1).*state.frac0(:,3).*state.poro0...
+state.rho(:,3).*(1-state.poro)-state.rho0(:,3).*(1-state.poro0)); 
R3=sparse(1:(ncc),1,d1e,(ncc),1);
R3=R3...
    +sparse(inter(:,1),1,-state.frac(ib,3).* rhokmukr(i,1).*(state.pressure(inter(:,1),1)-state.pressure(inter(:,2),1)),(ncc),1)...
    +sparse(inter(:,2),1,-state.frac(ib,3).* rhokmukr(i,1).*(state.pressure(inter(:,2),1)-state.pressure(inter(:,1),1)),(ncc),1)...
    +sparse(inter(:,1),1,-state.frac(ib,3).* rhoskmukr(i,1).*((G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:))*gravity'),(ncc),1)...
    +sparse(inter(:,2),1,-state.frac(ib,3).* rhoskmukr(i,1).*((G.cells.centroids(inter(:,1),:)-G.cells.centroids(inter(:,2),:))*gravity'),(ncc),1)...
    ...
    +sparse(inter(:,1),1, sphirhod(i,1).*(state.frac(inter(:,2),3)-state.frac(inter(:,1),3)),(ncc),1)...
    +sparse(inter(:,2),1, sphirhod(i,1).*(state.frac(inter(:,1),3)-state.frac(inter(:,2),3)),(ncc),1);


%% rhs boundary
if ~isempty(bc)
   

 


R1=R1...
    +sparse(bcell,1,-state.frac(bcell,1).* rhokmukr(bb,1).*(-pb(bb,1)+state.pressure(bcell,1)),(ncc),1)...
  +sparse(bcell,1,-state.frac(bcell,1).* rhoskmukr(bb,1).*((G.faces.centroids(bb,:)-G.cells.centroids(bcell,:))*gravity'),(ncc),1);

   
   
R2=R2...
    +sparse(bcell,1,-(state.frac(bcell,2)).* rhokmukr(bb,1).*(-pb(bb,1)+state.pressure(bcell,1)),(ncc),1)...
     +sparse(bcell,1,-(state.frac(bcell,2)).* rhoskmukr(bb,1).*((G.faces.centroids(bb,:)-G.cells.centroids(bcell,:))*gravity'),(ncc),1)...
     +sparse(bcell,1,-rhokmukr(bb,2).*(-pb(bb,2)+state.pressure(bcell,2)),(ncc),1)...
    +sparse(bcell,1,-rhoskmukr(bb,2).*((G.faces.centroids(bb,:)-G.cells.centroids(bcell,:))*gravity'),(ncc),1);


R3=R3...
    +sparse(bcell,1,-state.frac(bcell,3).* rhokmukr(bb,1).*(-pb(bb,1)+state.pressure(bcell,1)),(ncc),1)...
  +sparse(bcell,1,-state.frac(bcell,3).* rhoskmukr(bb,1).*((G.faces.centroids(bb,:)-G.cells.centroids(bcell,:))*gravity'),(ncc),1);




 
end


%% rhs well 

rW=sparse([],[],[],(nw),1);
for ki= 1 : nw

      wc=W(ki).cells;
       if W(ki).compi(1)==1 %inject brine

%      RF=(W(ki).rho(1).*W(ki).WI.*krw(wc,1)./W(ki).mu(1)).*(W(ki).pressure-state.pressure(wc,1)+W(ki).rho(1).*W(ki).dZ.*norm(gravity));
%      RW=W(ki).val.*state.rhoref(1)-sum(RF);
%      R1=R1+sparse(wc,1,RF,(ncc),1);
%     rW=rW+sparse(ki,1,RW,(nw),1);


      % for co2 comonent in the grid
     RF=(W(ki).rho(1).*W(ki).WI.*krw(wc,1)./W(ki).mu(1)).*(W(ki).pressure-state.pressure(wc,1)+W(ki).rho(1).*W(ki).dZ.*norm(gravity));
       R2=R2+sparse(wc,1,W(ki).frac(2).*RF,(ncc),1);
           % for water component in the grid
           R1=R1+sparse(wc,1,W(ki).frac(1).*RF,(ncc),1);
            % for mineral component in the grid
           R3=R3+sparse(wc,1,W(ki).frac(3).*RF,(ncc),1);
           
        %for injection well  both species
           RW=W(ki).val.*state.rhoref(1)-sum(RF);
   rW=rW+sparse(ki,1,RW,(nw),1);
    

     
       else
     % for co2 species in the grid
     RF=(W(ki).rho(2).*W(ki).WI.*krw(wc,2)./W(ki).mu(2)).*(W(ki).pressure-state.pressure(wc,2)+W(ki).rho(2).*W(ki).dZ.*norm(gravity));
       R2=R2+sparse(wc,1,W(ki).frac(4).*RF,(ncc),1);
           % for water species in the grid
           R1=R1+sparse(wc,1,W(ki).frac(3).*RF,(ncc),1);
        %for injection well  both species
           RW=W(ki).val.*state.rhoref(2)-sum(RF);
   rW=rW+sparse(ki,1,RW,(nw),1);
       end
end

L=[m11,m12,m13,wCol1;...
    m21,m22,m23,wCol2;...
    m31,m32,m33,wCol3;...
    wRow1,wRow2,wRow3,wCor];
R=[R1;R2;R3;rW];

%%
COMPONENT=zeros(size(state.component));
deo=G.cells.volumes./dt.*...
    (state.rho0(:,1).*state.s0(:,1).*state.frac0(:,4).*state.poro0); 
Ro=sparse(1:(ncc),1,deo,(ncc),1);
Ro=Ro+sparse(inter(:,1),1,-state.frac(ib,4).* rhokmukr(i,1).*(state.pressure(inter(:,1),1)-state.pressure(inter(:,2),1)),(ncc),1)...
    +sparse(inter(:,2),1,-state.frac(ib,4).* rhokmukr(i,1).*(state.pressure(inter(:,2),1)-state.pressure(inter(:,1),1)),(ncc),1)...
    +sparse(inter(:,1),1,-state.frac(ib,4).* rhoskmukr(i,1).*((G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:))*gravity'),(ncc),1)...
    +sparse(inter(:,2),1,-state.frac(ib,4).* rhoskmukr(i,1).*((G.cells.centroids(inter(:,1),:)-G.cells.centroids(inter(:,2),:))*gravity'),(ncc),1)...
   ...
    +sparse(inter(:,1),1, sphirhod(i,1).*(state.frac(inter(:,2),4)-state.frac(inter(:,1),4)),(ncc),1)...
    +sparse(inter(:,2),1, sphirhod(i,1).*(state.frac(inter(:,1),4)-state.frac(inter(:,2),4)),(ncc),1);



if ~isempty(bc)

Ro=Ro...
    +sparse(bcell,1,-state.frac(bcell,4).* rhokmukr(bb,1).*(-pb(bb,1)+state.pressure(bcell,1)),(ncc),1)...
  +sparse(bcell,1,-state.frac(bcell,4).* rhoskmukr(bb,1).*((G.faces.centroids(bb,:)-G.cells.centroids(bcell,:))*gravity'),(ncc),1);

    
end

for ki= 1 : nw

      wc=W(ki).cells;
       if W(ki).compi(1)==1 %inject brine

   RF=(W(ki).rho(1).*W(ki).WI.*krw(wc,1)./W(ki).mu(1)).*(W(ki).pressure-state.pressure(wc,1)+W(ki).rho(1).*W(ki).dZ.*norm(gravity));
       Ro=Ro+sparse(wc,1,W(ki).frac(4).*RF,(ncc),1);
       end
end

COMPONENT(:,4)=Ro.*dt;


deo=G.cells.volumes./dt.*...
    (state.rho0(:,1).*state.s0(:,1).*state.frac0(:,3).*state.poro0+state.rho0(:,3).*(1-state.poro0)); 
Ro=sparse(1:(ncc),1,deo,(ncc),1);
Ro=Ro+sparse(inter(:,1),1,-state.frac(ib,3).* rhokmukr(i,1).*(state.pressure(inter(:,1),1)-state.pressure(inter(:,2),1)),(ncc),1)...
    +sparse(inter(:,2),1,-state.frac(ib,3).* rhokmukr(i,1).*(state.pressure(inter(:,2),1)-state.pressure(inter(:,1),1)),(ncc),1)...
    +sparse(inter(:,1),1,-state.frac(ib,3).* rhoskmukr(i,1).*((G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:))*gravity'),(ncc),1)...
    +sparse(inter(:,2),1,-state.frac(ib,3).* rhoskmukr(i,1).*((G.cells.centroids(inter(:,1),:)-G.cells.centroids(inter(:,2),:))*gravity'),(ncc),1)...
   ...
    +sparse(inter(:,1),1, sphirhod(i,1).*(state.frac(inter(:,2),3)-state.frac(inter(:,1),3)),(ncc),1)...
    +sparse(inter(:,2),1, sphirhod(i,1).*(state.frac(inter(:,1),3)-state.frac(inter(:,2),3)),(ncc),1);



if ~isempty(bc)

Ro=Ro...
    +sparse(bcell,1,-state.frac(bcell,3).* rhokmukr(bb,1).*(-pb(bb,1)+state.pressure(bcell,1)),(ncc),1)...
  +sparse(bcell,1,-state.frac(bcell,3).* rhoskmukr(bb,1).*((G.faces.centroids(bb,:)-G.cells.centroids(bcell,:))*gravity'),(ncc),1);

    
end

for ki= 1 : nw

      wc=W(ki).cells;
       if W(ki).compi(1)==1 %inject brine

   RF=(W(ki).rho(1).*W(ki).WI.*krw(wc,1)./W(ki).mu(1)).*(W(ki).pressure-state.pressure(wc,1)+W(ki).rho(1).*W(ki).dZ.*norm(gravity));
       Ro=Ro+sparse(wc,1,W(ki).frac(3).*RF,(ncc),1);
       end
end

COMPONENT(:,3)=Ro.*dt;

deo=G.cells.volumes./dt.*...
    (state.rho0(:,1).*state.s0(:,1).*state.frac0(:,2).*state.poro0+state.rho0(:,2).*state.s0(:,2).*state.poro0); 
Ro=sparse(1:(ncc),1,deo,(ncc),1);
Ro=Ro+sparse(inter(:,1),1,-(state.frac(ib,2)).* rhokmukr(i,1).*(state.pressure(inter(:,1),1)-state.pressure(inter(:,2),1)),(ncc),1)...
    +sparse(inter(:,2),1,-(state.frac(ib,2)).* rhokmukr(i,1).*(state.pressure(inter(:,2),1)-state.pressure(inter(:,1),1)),(ncc),1)...
    +sparse(inter(:,1),1,-(state.frac(ib,2)).* rhoskmukr(i,1).*((G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:))*gravity'),(ncc),1)...
    +sparse(inter(:,2),1,-(state.frac(ib,2)).* rhoskmukr(i,1).*((G.cells.centroids(inter(:,1),:)-G.cells.centroids(inter(:,2),:))*gravity'),(ncc),1)...
    ...
    +sparse(inter(:,1),1,-rhokmukr(i,2).*(state.pressure(inter(:,1),2)-state.pressure(inter(:,2),2)),(ncc),1)...
    +sparse(inter(:,2),1,- rhokmukr(i,2).*(state.pressure(inter(:,2),2)-state.pressure(inter(:,1),2)),(ncc),1)...
    +sparse(inter(:,1),1,-rhoskmukr(i,2).*((G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:))*gravity'),(ncc),1)...
    +sparse(inter(:,2),1,-rhoskmukr(i,2).*((G.cells.centroids(inter(:,1),:)-G.cells.centroids(inter(:,2),:))*gravity'),(ncc),1)...
    ...
    +sparse(inter(:,1),1, sphirhod(i,1).*(state.frac(inter(:,2),2)-state.frac(inter(:,1),2)),(ncc),1)...
    +sparse(inter(:,2),1, sphirhod(i,1).*(state.frac(inter(:,1),2)-state.frac(inter(:,2),2)),(ncc),1);


if ~isempty(bc)

Ro=Ro...
    +sparse(bcell,1,-state.frac(bcell,2).* rhokmukr(bb,1).*(-pb(bb,1)+state.pressure(bcell,1)),(ncc),1)...
  +sparse(bcell,1,-state.frac(bcell,2).* rhoskmukr(bb,1).*((G.faces.centroids(bb,:)-G.cells.centroids(bcell,:))*gravity'),(ncc),1)...
      +sparse(bcell,1,-rhokmukr(bb,2).*(-pb(bb,2)+state.pressure(bcell,2)),(ncc),1)...
    +sparse(bcell,1,-rhoskmukr(bb,2).*((G.faces.centroids(bb,:)-G.cells.centroids(bcell,:))*gravity'),(ncc),1);
end

for ki= 1 : nw

      wc=W(ki).cells;
       if W(ki).compi(1)==1 %inject brine

   RF=(W(ki).rho(1).*W(ki).WI.*krw(wc,1)./W(ki).mu(1)).*(W(ki).pressure-state.pressure(wc,1)+W(ki).rho(1).*W(ki).dZ.*norm(gravity));
       Ro=Ro+sparse(wc,1,W(ki).frac(2).*RF,(ncc),1);
   
    

     
       else
     % for co2 species in the grid
     RF=(W(ki).rho(2).*W(ki).WI.*krw(wc,2)./W(ki).mu(2)).*(W(ki).pressure-state.pressure(wc,2)+W(ki).rho(2).*W(ki).dZ.*norm(gravity));
       Ro=Ro+sparse(wc,1,W(ki).frac(4).*RF,(ncc),1);

       end
end

COMPONENT(:,2)=Ro.*dt;
 %COMPONENT(:,2)=COMPONENT(:,2)+sparse(G.cells.indexMap(psp),1,state.species(psp,2),ncc,1);

deo=G.cells.volumes./dt.*...
    (state.rho0(:,1).*state.s0(:,1).*state.frac0(:,1).*state.poro0); 
Ro=sparse(1:(ncc),1,deo,(ncc),1);
Ro=Ro+sparse(inter(:,1),1,-state.frac(ib,1).* rhokmukr(i,1).*(state.pressure(inter(:,1),1)-state.pressure(inter(:,2),1)),(ncc),1)...
    +sparse(inter(:,2),1,-state.frac(ib,1).* rhokmukr(i,1).*(state.pressure(inter(:,2),1)-state.pressure(inter(:,1),1)),(ncc),1)...
    +sparse(inter(:,1),1,-state.frac(ib,1).* rhoskmukr(i,1).*((G.cells.centroids(inter(:,2),:)-G.cells.centroids(inter(:,1),:))*gravity'),(ncc),1)...
    +sparse(inter(:,2),1,-state.frac(ib,1).* rhoskmukr(i,1).*((G.cells.centroids(inter(:,1),:)-G.cells.centroids(inter(:,2),:))*gravity'),(ncc),1)...
   ...
    +sparse(inter(:,1),1, sphirhod(i,1).*(state.frac(inter(:,2),1)-state.frac(inter(:,1),1)),(ncc),1)...
    +sparse(inter(:,2),1, sphirhod(i,1).*(state.frac(inter(:,1),1)-state.frac(inter(:,2),1)),(ncc),1);



if ~isempty(bc)

Ro=Ro...
    +sparse(bcell,1,-state.frac(bcell,1).* rhokmukr(bb,1).*(-pb(bb,1)+state.pressure(bcell,1)),(ncc),1)...
  +sparse(bcell,1,-state.frac(bcell,1).* rhoskmukr(bb,1).*((G.faces.centroids(bb,:)-G.cells.centroids(bcell,:))*gravity'),(ncc),1);

    
end

for ki= 1 : nw

      wc=W(ki).cells;
       if W(ki).compi(1)==1 %inject brine

   RF=(W(ki).rho(1).*W(ki).WI.*krw(wc,1)./W(ki).mu(1)).*(W(ki).pressure-state.pressure(wc,1)+W(ki).rho(1).*W(ki).dZ.*norm(gravity));
       Ro=Ro+sparse(wc,1,W(ki).frac(1).*RF,(ncc),1);
   
    

     
       else
     % for co2 species in the grid
     RF=(W(ki).rho(2).*W(ki).WI.*krw(wc,2)./W(ki).mu(2)).*(W(ki).pressure-state.pressure(wc,2)+W(ki).rho(2).*W(ki).dZ.*norm(gravity));
       Ro=Ro+sparse(wc,1,W(ki).frac(3).*RF,(ncc),1);

       end
end
COMPONENT(:,1)=Ro.*dt;
end
   


  
function [ib,ic]=upwind(G,state)

neighbors = getNeighbourship(G, 'Topological', true);
 intern = all(neighbors ~= 0, 2);

gb=(state.pressure(neighbors(intern,2),1)-state.pressure(neighbors(intern,1),1))...
    -(state.rho(neighbors(intern,1),1)+state.rho(neighbors(intern,2),1))./2.*((G.cells.centroids(neighbors( intern,2),:)-G.cells.centroids(neighbors( intern,1),:))*gravity');
gc=(state.pressure(neighbors(intern,2),2)-state.pressure(neighbors(intern,1),2))...
    -(state.rho(neighbors(intern,1),2)+state.rho(neighbors(intern,2),2))./2.*((G.cells.centroids(neighbors( intern,2),:)-G.cells.centroids(neighbors( intern,1),:))*gravity');

  
   % Upwind direction for 'water': When v and g have the same sign, the
   %  sign of water phase flux is independent of mobilities.

   c = gb>0;

   N       = neighbors(intern,:);
   N(c, :) = N(c, [2,1]);
   ib= N(:, 1);
 

   % Upwind direction for 'oil': When v and g have the opposite sign, the
   %  sign of the oil phase flux is independent of mobilities.
      c = gc>0;

   N       = neighbors(intern,:);
   N(c, :) = N(c, [2,1]);
   ic= N(:, 1);





end
  
 function [kb,kc]=DISP(state,G,rock)
 
 [neighborship, ~] = getNeighbourship(G, 'Topological', true);

 i  = all(neighborship ~= 0, 2);
 flux_face_vector_brine=state.flux(:,1)./G.faces.areas(:).*G.faces.normals;
  flux_face_vector_gas=state.flux(:,2)./G.faces.areas(:).*G.faces.normals;
 flux_cell_brine(:,1)=1./rock.poro.*accumarray([neighborship(i,1); neighborship(i,2)],[ flux_face_vector_brine(i,1);flux_face_vector_brine(i,1)])./accumarray([neighborship(i,1); neighborship(i,2)], 1);
  flux_cell_brine(:,2)=1./rock.poro.*accumarray([neighborship(i,1); neighborship(i,2)],[ flux_face_vector_brine(i,2);flux_face_vector_brine(i,2)])./accumarray([neighborship(i,1); neighborship(i,2)], 1);
  flux_cell_brine(:,3)=1./rock.poro.*accumarray([neighborship(i,1); neighborship(i,2)],[ flux_face_vector_brine(i,3);flux_face_vector_brine(i,3)])./accumarray([neighborship(i,1); neighborship(i,2)], 1);

  flux_cell_gas(:,1)=1./rock.poro.*accumarray([neighborship(i,1); neighborship(i,2)],[ flux_face_vector_gas(i,1);flux_face_vector_gas(i,1)])./accumarray([neighborship(i,1); neighborship(i,2)], 1);
  flux_cell_gas(:,2)=1./rock.poro.*accumarray([neighborship(i,1); neighborship(i,2)],[ flux_face_vector_gas(i,2);flux_face_vector_gas(i,2)])./accumarray([neighborship(i,1); neighborship(i,2)], 1);
  flux_cell_gas(:,3)=1./rock.poro.*accumarray([neighborship(i,1); neighborship(i,2)],[ flux_face_vector_gas(i,3);flux_face_vector_gas(i,3)])./accumarray([neighborship(i,1); neighborship(i,2)], 1);
 
  vabs(:,1)=sqrt(sum(flux_cell_brine.^2,2));
    vabs(:,2)=sqrt(sum(flux_cell_gas.^2,2));
  al=state.al(1); %longitudinal dispersivity
at=state.at(1); %lateral dispersivity
dm=state.dm(1);
taubc=rock.poro.^(4/3).*(state.s0(:,1)).^(10/3);
tau=taubc;


  
  Kb(:,1)=al.*vabs(:,1)+(al-at).*( flux_cell_brine(:,1)).^2./vabs(:,1)+tau.*dm;%xx
  Kb(:,2)=(al-at).* flux_cell_brine(:,1).* flux_cell_brine(:,2)./vabs(:,1);%xy
Kb(:,3)=(al-at).* flux_cell_brine(:,1).* flux_cell_brine(:,3)./vabs(:,1);%xz
Kb(:,4)=al.*vabs(:,1)+(al-at).*( flux_cell_brine(:,2)).^2./vabs(:,1)+tau.*dm;%yy
Kb(:,5)=(al-at).* flux_cell_brine(:,2).* flux_cell_brine(:,3)./vabs(:,1);%yz
Kb(:,6)=at.*vabs(:,1)+(al-at).*( flux_cell_brine(:,3)).^2./vabs(:,1)+tau.*dm;%zz




Kb(isnan(Kb))=0;
rock.perm=Kb;
kb=computeTrans(G, rock);
   kb(isnan(kb))=0; 
   
   
   al=state.al(2); %longitudinal dispersivity
at=state.at(2); %lateral dispersivity
dm=state.dm(2);
taubc=rock.poro.^(4/3).*(state.s0(:,2)).^(10/3);
tau=taubc;


  
  Kc(:,1)=al.*vabs(:,2)+(al-at).*( flux_cell_gas(:,1)).^2./vabs(:,2)+tau.*dm;%xx
  Kc(:,2)=(al-at).* flux_cell_gas(:,1).* flux_cell_gas(:,2)./vabs(:,2);%xy
Kc(:,3)=(al-at).* flux_cell_gas(:,1).* flux_cell_gas(:,3)./vabs(:,2);%xz
Kc(:,4)=al.*vabs(:,2)+(al-at).*( flux_cell_gas(:,2)).^2./vabs(:,2)+tau.*dm;%yy
Kc(:,5)=(al-at).* flux_cell_gas(:,2).* flux_cell_gas(:,3)./vabs(:,2);%yz
Kc(:,6)=at.*vabs(:,2)+(al-at).*( flux_cell_gas(:,3)).^2./vabs(:,2)+tau.*dm;%zz



Kc(isnan(Kc))=0;
rock.perm=Kc;
kc=computeTrans(G, rock);
  kc(isnan(kc))=0;
  


 end

